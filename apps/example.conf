nodes {
    ams {
        type = group
        schema = board/ams
        version = 1
        pretty = “Accumulator Management System”

        // TODO: Type reusal
        // maybe add a types {} section which can be referenced
        // with type =
        dcdc_status { type = enum, values=[On, Off, “Needs Help”] }

        online { type = bool }
    }

    // notice that the bridge is a node too!
    // this way we can support stream connections without
    // any changes on the gui
    bridge {
        type = group
        schema = bridge
        version = 1

        // whoever has “owner” permissions of an sink
        // deals with the incoming values
        recording_state = { type = sink, value { type = bool } }

        // use the empty type 
        restart = { type = sink, value { type = empty } }
    }
}

configs {
    ams {
        platform = "stm32"
        parameters { 
            // All platform specific information needed for codegen goes here
            // will generate code for each interface
            interfaces {
                // one can connection which listens for all non-ams variables
                // and dumps all ams changes to the bus

                general_can { type = can, baud = 50000,

                    // will listen on the general can for everything except for ams
                    // updates, which will be published to the general can
                    pubish : [ /ams ]
                    // automatically excludes the exports, but we can manualy exclude /ams anyways
                    // this will be useful if we have multiple interfaces
                    listen : [ /, -/ams ]  
                }
            }
        }
        // determines what can be "seen" in this context
        permissions {
            read=[
                /pcm/flags
            ]
            write=[
                /pcm/ams_ready
                /
            ]
            own=[
                /ams
            ]
        }
    }
}

