<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4" kind="class" language="C++" prot="public">
    <compoundname>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</compoundname>
    <includes refid="gen_2telegen_2inplace__function_8hpp" local="no">inplace_function.hpp</includes>
    <templateparamlist>
      <param>
        <type>class R</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>Capacity</declname>
        <defname>Capacity</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>Alignment</declname>
        <defname>Alignment</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aea6389d817e3c7874c7aebd99d2607ad" prot="private" static="no">
        <type><ref refid="namespacestdext_1_1inplace__function__detail_1a84aa129d717eea675489c4b491812944" kindref="member">inplace_function_detail::aligned_storage_t</ref>&lt; Capacity, Alignment &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::storage_t =  inplace_function_detail::aligned_storage_t&lt;Capacity, Alignment&gt;</definition>
        <argsstring></argsstring>
        <name>storage_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="210" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aed561d9964113dbc1f8cf97a8aa72edc" prot="private" static="no">
        <type><ref refid="structstdext_1_1inplace__function__detail_1_1vtable" kindref="compound">inplace_function_detail::vtable</ref>&lt; R, Args... &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::vtable_t =  inplace_function_detail::vtable&lt;R, Args...&gt;</definition>
        <argsstring></argsstring>
        <name>vtable_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="211" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7cf2e85e3badb5f66263e2706103b4aa" prot="private" static="no">
        <type>const <ref refid="structstdext_1_1inplace__function__detail_1_1vtable" kindref="compound">vtable_t</ref> *</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::vtable_ptr_t =  const vtable_t*</definition>
        <argsstring></argsstring>
        <name>vtable_ptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="212" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aea6389d817e3c7874c7aebd99d2607ad" prot="private" static="no">
        <type><ref refid="namespacestdext_1_1inplace__function__detail_1a84aa129d717eea675489c4b491812944" kindref="member">inplace_function_detail::aligned_storage_t</ref>&lt; Capacity, Alignment &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::storage_t =  inplace_function_detail::aligned_storage_t&lt;Capacity, Alignment&gt;</definition>
        <argsstring></argsstring>
        <name>storage_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="210" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aed561d9964113dbc1f8cf97a8aa72edc" prot="private" static="no">
        <type><ref refid="structstdext_1_1inplace__function__detail_1_1vtable" kindref="compound">inplace_function_detail::vtable</ref>&lt; R, Args... &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::vtable_t =  inplace_function_detail::vtable&lt;R, Args...&gt;</definition>
        <argsstring></argsstring>
        <name>vtable_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="211" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7cf2e85e3badb5f66263e2706103b4aa" prot="private" static="no">
        <type>const <ref refid="structstdext_1_1inplace__function__detail_1_1vtable" kindref="compound">vtable_t</ref> *</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::vtable_ptr_t =  const vtable_t*</definition>
        <argsstring></argsstring>
        <name>vtable_ptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="212" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7aeca8cbeac6770ddbbe3d2de1606119" prot="public" static="no">
        <type>std::integral_constant&lt; size_t, Capacity &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::capacity =  std::integral_constant&lt;size_t, Capacity&gt;</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="217" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a6fb11b21afeb300682fb544ff2f9c4db" prot="public" static="no">
        <type>std::integral_constant&lt; size_t, Alignment &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::alignment =  std::integral_constant&lt;size_t, Alignment&gt;</definition>
        <argsstring></argsstring>
        <name>alignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="218" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7aeca8cbeac6770ddbbe3d2de1606119" prot="public" static="no">
        <type>std::integral_constant&lt; size_t, Capacity &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::capacity =  std::integral_constant&lt;size_t, Capacity&gt;</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="217" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a6fb11b21afeb300682fb544ff2f9c4db" prot="public" static="no">
        <type>std::integral_constant&lt; size_t, Alignment &gt;</type>
        <definition>using stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::alignment =  std::integral_constant&lt;size_t, Alignment&gt;</definition>
        <argsstring></argsstring>
        <name>alignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="218" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a5b4d4b71b2852dbb67897387c2e31957" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>size_t</type>
          </param>
          <param>
            <type>size_t</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class inplace_function</definition>
        <argsstring></argsstring>
        <name>inplace_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="214" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1ac652007694c3840de1d307fc57b972f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void swap</definition>
        <argsstring>(inplace_function &amp;lhs, inplace_function &amp;rhs) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="369" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="369" bodyend="372"/>
      </memberdef>
      <memberdef kind="friend" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1ac652007694c3840de1d307fc57b972f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void swap</definition>
        <argsstring>(inplace_function &amp;lhs, inplace_function &amp;rhs) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="369" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="369" bodyend="372"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a3fd4090a41b172ea1585b98ebc47c1fd" prot="private" static="no" mutable="no">
        <type><ref refid="structstdext_1_1inplace__function__detail_1_1vtable" kindref="compound">vtable_ptr_t</ref></type>
        <definition>vtable_ptr_t stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::vtable_ptr_</definition>
        <argsstring></argsstring>
        <name>vtable_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="375" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a46d55f0b8210b59a71592b3fd9b0e09d" prot="private" static="no" mutable="yes">
        <type>storage_t</type>
        <definition>storage_t stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::storage_</definition>
        <argsstring></argsstring>
        <name>storage_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="376" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a4f0aa2830789ae07d6eaa554e3665865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>inplace_function</definition>
        <argsstring>() noexcept</argsstring>
        <name>inplace_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="220" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a28bb1c55b24a4056b128be868af7794b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C</type>
            <defval>std::decay_t&lt;T&gt;</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;            !<ref refid="structstdext_1_1inplace__function__detail_1_1is__inplace__function" kindref="compound">inplace_function_detail::is_inplace_function</ref>&lt;C&gt;::value            &amp;&amp; <ref refid="namespacestdext_1_1inplace__function__detail_1a8d53be19103030d83354d280975ae690" kindref="member">inplace_function_detail::is_invocable_r</ref>&lt;R, C&amp;, Args...&gt;::value        &gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(T &amp;&amp;closure)</argsstring>
        <name>inplace_function</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="232" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="232" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adc64caf861ce3703357c901c4691ace7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Cap</declname>
            <defname>Cap</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Align</declname>
            <defname>Align</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(const inplace_function&lt; R(Args...), Cap, Align &gt; &amp;other)</argsstring>
        <name>inplace_function</name>
        <param>
          <type>const <ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref>&lt; R(Args...), Cap, Align &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="253" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="253" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adeb6b2419556c7826ca7cd04c3b5ef2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Cap</declname>
            <defname>Cap</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Align</declname>
            <defname>Align</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(inplace_function&lt; R(Args...), Cap, Align &gt; &amp;&amp;other) noexcept</argsstring>
        <name>inplace_function</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref>&lt; R(Args...), Cap, Align &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="262" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="262" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7bd44c3a16e8c7312be0cc3ae1e0d387" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>inplace_function</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="272" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="272" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a1ccbc60554d934faf7c8e4188f6141b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(const inplace_function &amp;other)</argsstring>
        <name>inplace_function</name>
        <param>
          <type>const <ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="276" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="276" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a9c97182aafdffc26da1f569830bf01bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(inplace_function &amp;&amp;other) noexcept</argsstring>
        <name>inplace_function</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="285" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="285" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1af53e5cf03650c43b743bd040674d4762" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
        <definition>inplace_function&amp; stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator=</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="294" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a191f41fe8250b4189176a9baae25ee60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
        <definition>inplace_function&amp; stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator=</definition>
        <argsstring>(inplace_function other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="301" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="301" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1acb623711bd68bbbf71cb7e233f6226de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::~inplace_function</definition>
        <argsstring>()</argsstring>
        <name>~inplace_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="313" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a64e0f59000063faaf35ebdcdf1e10bae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator()</definition>
        <argsstring>(Args... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="318" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="318" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a2fc2327b65754cc6c20d37d76cb86aa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void *</type>
        <definition>constexpr void* stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="326" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a174b90228b202356b44b3fa91ae566e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator==</definition>
        <argsstring>(std::nullptr_t) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="331" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a0991678f0a58072f1f3f89919fe92676" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator!=</definition>
        <argsstring>(std::nullptr_t) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="336" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a8fa4d88e328279b050356c0968ec0498" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="341" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7524f21e7df2da0b701d6948c0936956" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::swap</definition>
        <argsstring>(inplace_function &amp;other) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="346" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="346" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1abf61c53037695ba21179552164a87102" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>() noexcept</argsstring>
        <name>inplace_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="220" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a28bb1c55b24a4056b128be868af7794b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C</type>
            <defval>std::decay_t&lt;T&gt;</defval>
          </param>
          <param>
            <type>class</type>
            <defval>std::enable_if_t&lt;            !<ref refid="structstdext_1_1inplace__function__detail_1_1is__inplace__function" kindref="compound">inplace_function_detail::is_inplace_function</ref>&lt;C&gt;::value            &amp;&amp; <ref refid="namespacestdext_1_1inplace__function__detail_1a8d53be19103030d83354d280975ae690" kindref="member">inplace_function_detail::is_invocable_r</ref>&lt;R, C&amp;, Args...&gt;::value        &gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(T &amp;&amp;closure)</argsstring>
        <name>inplace_function</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>closure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="232" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="232" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adc64caf861ce3703357c901c4691ace7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Cap</declname>
            <defname>Cap</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Align</declname>
            <defname>Align</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(const inplace_function&lt; R(Args...), Cap, Align &gt; &amp;other)</argsstring>
        <name>inplace_function</name>
        <param>
          <type>const <ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref>&lt; R(Args...), Cap, Align &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="253" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="253" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adeb6b2419556c7826ca7cd04c3b5ef2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>Cap</declname>
            <defname>Cap</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Align</declname>
            <defname>Align</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(inplace_function&lt; R(Args...), Cap, Align &gt; &amp;&amp;other) noexcept</argsstring>
        <name>inplace_function</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref>&lt; R(Args...), Cap, Align &gt; &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="262" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="262" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7bd44c3a16e8c7312be0cc3ae1e0d387" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>inplace_function</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="272" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="272" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a1ccbc60554d934faf7c8e4188f6141b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(const inplace_function &amp;other)</argsstring>
        <name>inplace_function</name>
        <param>
          <type>const <ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="276" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="276" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a9c97182aafdffc26da1f569830bf01bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(inplace_function &amp;&amp;other) noexcept</argsstring>
        <name>inplace_function</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="285" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="285" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1af53e5cf03650c43b743bd040674d4762" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
        <definition>inplace_function&amp; stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator=</definition>
        <argsstring>(std::nullptr_t) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="294" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a191f41fe8250b4189176a9baae25ee60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
        <definition>inplace_function&amp; stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator=</definition>
        <argsstring>(inplace_function other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="301" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="301" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1acb623711bd68bbbf71cb7e233f6226de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::~inplace_function</definition>
        <argsstring>()</argsstring>
        <name>~inplace_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="313" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a64e0f59000063faaf35ebdcdf1e10bae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>R</type>
        <definition>R stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator()</definition>
        <argsstring>(Args... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="318" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="318" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a2fc2327b65754cc6c20d37d76cb86aa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void *</type>
        <definition>constexpr void* stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="326" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a174b90228b202356b44b3fa91ae566e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator==</definition>
        <argsstring>(std::nullptr_t) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="331" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a0991678f0a58072f1f3f89919fe92676" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator!=</definition>
        <argsstring>(std::nullptr_t) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="336" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a8fa4d88e328279b050356c0968ec0498" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="341" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7524f21e7df2da0b701d6948c0936956" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::swap</definition>
        <argsstring>(inplace_function &amp;other) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classstdext_1_1inplace__function" kindref="compound">inplace_function</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="346" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="346" bodyend="367"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a55068c4e648ffb07b8266bb3cd210231" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(vtable_ptr_t vtable_ptr, typename vtable_t::process_ptr_t process_ptr, typename vtable_t::storage_ptr_t storage_ptr)</argsstring>
        <name>inplace_function</name>
        <param>
          <type><ref refid="structstdext_1_1inplace__function__detail_1_1vtable" kindref="compound">vtable_ptr_t</ref></type>
          <declname>vtable_ptr</declname>
        </param>
        <param>
          <type>typename <ref refid="structstdext_1_1inplace__function__detail_1_1vtable_1af52f23b9203f5508d063e887ce7626a0" kindref="member">vtable_t::process_ptr_t</ref></type>
          <declname>process_ptr</declname>
        </param>
        <param>
          <type>typename <ref refid="structstdext_1_1inplace__function__detail_1_1vtable_1afbcc981dca754e07bf57710ac26880f2" kindref="member">vtable_t::storage_ptr_t</ref></type>
          <declname>storage_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/inplace_function.hpp" line="378" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="378" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a55068c4e648ffb07b8266bb3cd210231" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;::inplace_function</definition>
        <argsstring>(vtable_ptr_t vtable_ptr, typename vtable_t::process_ptr_t process_ptr, typename vtable_t::storage_ptr_t storage_ptr)</argsstring>
        <name>inplace_function</name>
        <param>
          <type><ref refid="structstdext_1_1inplace__function__detail_1_1vtable" kindref="compound">vtable_ptr_t</ref></type>
          <declname>vtable_ptr</declname>
        </param>
        <param>
          <type>typename <ref refid="structstdext_1_1inplace__function__detail_1_1vtable_1af52f23b9203f5508d063e887ce7626a0" kindref="member">vtable_t::process_ptr_t</ref></type>
          <declname>process_ptr</declname>
        </param>
        <param>
          <type>typename <ref refid="structstdext_1_1inplace__function__detail_1_1vtable_1afbcc981dca754e07bf57710ac26880f2" kindref="member">vtable_t::storage_ptr_t</ref></type>
          <declname>storage_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/utils/inplace_function.hpp" line="378" column="1" bodyfile="lib/telegraph/utils/inplace_function.hpp" bodystart="378" bodyend="385"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="gen/telegen/inplace_function.hpp" line="209" column="1" bodyfile="gen/telegen/inplace_function.hpp" bodystart="208" bodyend="386"/>
    <listofallmembers>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a6fb11b21afeb300682fb544ff2f9c4db" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>alignment</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a6fb11b21afeb300682fb544ff2f9c4db" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>alignment</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7aeca8cbeac6770ddbbe3d2de1606119" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>capacity</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7aeca8cbeac6770ddbbe3d2de1606119" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>capacity</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a2fc2327b65754cc6c20d37d76cb86aa9" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>data</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a2fc2327b65754cc6c20d37d76cb86aa9" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>data</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a5b4d4b71b2852dbb67897387c2e31957" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a4f0aa2830789ae07d6eaa554e3665865" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a28bb1c55b24a4056b128be868af7794b" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adc64caf861ce3703357c901c4691ace7" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adeb6b2419556c7826ca7cd04c3b5ef2e" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7bd44c3a16e8c7312be0cc3ae1e0d387" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a1ccbc60554d934faf7c8e4188f6141b0" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a9c97182aafdffc26da1f569830bf01bb" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a55068c4e648ffb07b8266bb3cd210231" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1abf61c53037695ba21179552164a87102" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a28bb1c55b24a4056b128be868af7794b" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adc64caf861ce3703357c901c4691ace7" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1adeb6b2419556c7826ca7cd04c3b5ef2e" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7bd44c3a16e8c7312be0cc3ae1e0d387" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a1ccbc60554d934faf7c8e4188f6141b0" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a9c97182aafdffc26da1f569830bf01bb" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a55068c4e648ffb07b8266bb3cd210231" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a8fa4d88e328279b050356c0968ec0498" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator bool</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a8fa4d88e328279b050356c0968ec0498" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator bool</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a0991678f0a58072f1f3f89919fe92676" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator!=</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a0991678f0a58072f1f3f89919fe92676" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator!=</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a64e0f59000063faaf35ebdcdf1e10bae" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator()</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a64e0f59000063faaf35ebdcdf1e10bae" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator()</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1af53e5cf03650c43b743bd040674d4762" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator=</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a191f41fe8250b4189176a9baae25ee60" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator=</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1af53e5cf03650c43b743bd040674d4762" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator=</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a191f41fe8250b4189176a9baae25ee60" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator=</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a174b90228b202356b44b3fa91ae566e0" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator==</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a174b90228b202356b44b3fa91ae566e0" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>operator==</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a46d55f0b8210b59a71592b3fd9b0e09d" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>storage_</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aea6389d817e3c7874c7aebd99d2607ad" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>storage_t</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aea6389d817e3c7874c7aebd99d2607ad" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>storage_t</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7524f21e7df2da0b701d6948c0936956" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>swap</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1ac652007694c3840de1d307fc57b972f5" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>swap</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7524f21e7df2da0b701d6948c0936956" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>swap</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1ac652007694c3840de1d307fc57b972f5" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>swap</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a3fd4090a41b172ea1585b98ebc47c1fd" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>vtable_ptr_</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7cf2e85e3badb5f66263e2706103b4aa" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>vtable_ptr_t</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1a7cf2e85e3badb5f66263e2706103b4aa" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>vtable_ptr_t</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aed561d9964113dbc1f8cf97a8aa72edc" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>vtable_t</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1aed561d9964113dbc1f8cf97a8aa72edc" prot="private" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>vtable_t</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1acb623711bd68bbbf71cb7e233f6226de" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>~inplace_function</name></member>
      <member refid="classstdext_1_1inplace__function_3_01R_07Args_8_8_8_08_00_01Capacity_00_01Alignment_01_4_1acb623711bd68bbbf71cb7e233f6226de" prot="public" virt="non-virtual"><scope>stdext::inplace_function&lt; R(Args...), Capacity, Alignment &gt;</scope><name>~inplace_function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
