<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tmp__archive_8hpp" kind="file" language="C++">
    <compoundname>tmp_archive.hpp</compoundname>
    <includes refid="data_8hpp" local="yes">../common/data.hpp</includes>
    <includes refid="lib_2telegraph_2common_2nodes_8hpp" local="yes">../common/nodes.hpp</includes>
    <includes refid="local_2namespace_8hpp" local="yes">namespace.hpp</includes>
    <includedby refid="tmp__archive_8cpp" local="yes">tmp_archive.cpp</includedby>
    <incdepgraph>
      <node id="1343">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
      </node>
      <node id="1325">
        <label>functional</label>
      </node>
      <node id="1335">
        <label>context.hpp</label>
      </node>
      <node id="1339">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="1321">
        <label>value.hpp</label>
        <link refid="lib_2telegraph_2common_2value_8hpp"/>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
      </node>
      <node id="1316">
        <label>type.hpp</label>
        <link refid="type_8hpp"/>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
      </node>
      <node id="1344">
        <label>variant</label>
      </node>
      <node id="1332">
        <label>../utils/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="1333" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
      </node>
      <node id="1328">
        <label>../utils/io_fwd.hpp</label>
        <link refid="io__fwd_8hpp"/>
      </node>
      <node id="1324">
        <label>../utils/signal.hpp</label>
        <link refid="signal_8hpp"/>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
      </node>
      <node id="1318">
        <label>string</label>
      </node>
      <node id="1327">
        <label>map</label>
      </node>
      <node id="1322">
        <label>cinttypes</label>
      </node>
      <node id="1331">
        <label>../common/nodes.hpp</label>
        <link refid="lib_2telegraph_2common_2nodes_8hpp"/>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
      </node>
      <node id="1333">
        <label>exception</label>
      </node>
      <node id="1323">
        <label>ostream</label>
      </node>
      <node id="1336">
        <label>../utils/uuid.hpp</label>
        <link refid="uuid_8hpp"/>
        <childnode refid="1337" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1339" relation="include">
        </childnode>
      </node>
      <node id="1319">
        <label>string_view</label>
      </node>
      <node id="1320">
        <label>common.pb.h</label>
      </node>
      <node id="1338">
        <label>boost/uuid/random_generator.hpp</label>
      </node>
      <node id="1345">
        <label>optional</label>
      </node>
      <node id="1317">
        <label>vector</label>
      </node>
      <node id="1340">
        <label>../common/namespace.hpp</label>
        <link refid="common_2namespace_8hpp"/>
        <childnode refid="1341" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1345" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
      </node>
      <node id="1341">
        <label>collection.hpp</label>
        <link refid="collection_8hpp"/>
        <childnode refid="1336" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1342" relation="include">
        </childnode>
      </node>
      <node id="1314">
        <label>tmp_archive.hpp</label>
        <link refid="tmp__archive_8hpp"/>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1331" relation="include">
        </childnode>
        <childnode refid="1334" relation="include">
        </childnode>
      </node>
      <node id="1334">
        <label>namespace.hpp</label>
        <link refid="local_2namespace_8hpp"/>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1340" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
      </node>
      <node id="1342">
        <label>unordered_map</label>
      </node>
      <node id="1326">
        <label>mutex</label>
      </node>
      <node id="1330">
        <label>chrono</label>
      </node>
      <node id="1337">
        <label>boost/uuid/uuid.hpp</label>
      </node>
      <node id="1315">
        <label>../common/data.hpp</label>
        <link refid="data_8hpp"/>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1330" relation="include">
        </childnode>
      </node>
      <node id="1329">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1346">
        <label>tmp_archive.hpp</label>
        <link refid="tmp__archive_8hpp"/>
        <childnode refid="1347" relation="include">
        </childnode>
      </node>
      <node id="1347">
        <label>tmp_archive.cpp</label>
        <link refid="tmp__archive_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtelegraph_1_1tmp__data" prot="public">telegraph::tmp_data</innerclass>
    <innerclass refid="classtelegraph_1_1tmp__archive" prot="public">telegraph::tmp_archive</innerclass>
    <innernamespace refid="namespacetelegraph">telegraph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__TELEGRAPH_LOCAL_TMP_ARCHIVE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__TELEGRAPH_LOCAL_TMP_ARCHIVE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common/data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common/nodes.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="local_2namespace_8hpp" kindref="compound">namespace.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetelegraph" kindref="compound">telegraph</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classtelegraph_1_1tmp__data" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtelegraph_1_1tmp__data" kindref="compound">tmp_data</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1data__query" kindref="compound">data_query</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;data_point&gt;<sp/>current_;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="classtelegraph_1_1tmp__data_1a0cc69096544afeaffaae5f25587dc62f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;data_point&gt;&amp;<sp/><ref refid="classtelegraph_1_1tmp__data_1a0cc69096544afeaffaae5f25587dc62f" kindref="member">get_current</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_;<sp/>}</highlight></codeline>
<codeline lineno="16" refid="classtelegraph_1_1tmp__data_1a32f7e20afb889b3f9b179cfefed31f9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1tmp__data_1a32f7e20afb889b3f9b179cfefed31f9e" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;data_point&gt;&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_.insert(current_.end(),<sp/>d.begin(),<sp/>d.end());</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1data__query_1a81705835f67a1e5a4ce2c1009847eddc" kindref="member">data</ref>(d);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>request<sp/>recording<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classtelegraph_1_1tmp__archive" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtelegraph_1_1tmp__archive" kindref="compound">tmp_archive</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1local__context" kindref="compound">local_context</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;const<sp/>variable*,<sp/>std::shared_ptr&lt;tmp_data&gt;&gt;<sp/>data_;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;const<sp/>variable*,<sp/>subscription_ptr&gt;<sp/>recordings_;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;<ref refid="classtelegraph_1_1params__stream" kindref="compound">params_stream</ref>*,<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::weak_ptr&lt;params_stream&gt;&gt;<sp/>recordings_queries_;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1tmp__archive" kindref="compound">tmp_archive</ref>(io::io_context&amp;<sp/>ioc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/>name,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;node&gt;&amp;&amp;<sp/>s);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classtelegraph_1_1tmp__archive" kindref="compound">tmp_archive</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1ad071241508ea0f86c7de0686016f9ca9" kindref="member">params_stream_ptr</ref><sp/>request(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1params" kindref="compound">params</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>record(<ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v,<sp/><ref refid="namespacetelegraph_1a58641aa5b1a2cbdb0431916a87069f64" kindref="member">subscription_ptr</ref><sp/>s);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>record_stop(<ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classtelegraph_1_1tmp__archive_1ae1838ff3fc3f1cd0eab31535a2f2e974" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1tmp__archive_1ae1838ff3fc3f1cd0eab31535a2f2e974" kindref="member">write_data</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;data_point&gt;&amp;<sp/><ref refid="classtelegraph_1_1data__query_1a81705835f67a1e5a4ce2c1009847eddc" kindref="member">data</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>data_.find(v);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>data_.end())<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>std::make_shared&lt;tmp_data&gt;();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[v]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;write(data);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;write(data);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50" refid="classtelegraph_1_1tmp__archive_1a228c2c681beb749268d09cd83d594246" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1tmp__archive_1a228c2c681beb749268d09cd83d594246" kindref="member">write_data</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;<sp/>v,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;data_point&gt;&amp;<sp/><ref refid="classtelegraph_1_1data__query_1a81705835f67a1e5a4ce2c1009847eddc" kindref="member">data</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><sp/>tree_-&gt;from_path(v);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>var<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(n);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!var)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write_data(yield,<sp/>var,<sp/>data);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classtelegraph_1_1tmp__archive_1a7f2d18d2a4c9a7fd65d9752c8f4ce4d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a6ffe775ac48dca2a4013b53d692199c8" kindref="member">data_query_ptr</ref><sp/><ref refid="classtelegraph_1_1tmp__archive_1a7f2d18d2a4c9a7fd65d9752c8f4ce4d5" kindref="member">query_data</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>ctx,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>data_.find(v);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>data_.end())<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>std::make_shared&lt;tmp_data&gt;();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[v]<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a6ffe775ac48dca2a4013b53d692199c8" kindref="member">data_query_ptr</ref><sp/>query_data(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>ctx,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;<sp/>v)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classtelegraph_1_1tmp__archive_1a10adc383103f4183e0a37485a5406cf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a58641aa5b1a2cbdb0431916a87069f64" kindref="member">subscription_ptr</ref><sp/><ref refid="classtelegraph_1_1tmp__archive_1a10adc383103f4183e0a37485a5406cf1" kindref="member">subscribe</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>ctx,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v,<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_interval,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_interval,<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79" refid="classtelegraph_1_1tmp__archive_1a9cf4be673f860b875b085c1ecac913ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a58641aa5b1a2cbdb0431916a87069f64" kindref="member">subscription_ptr</ref><sp/><ref refid="classtelegraph_1_1tmp__archive_1a9cf4be673f860b875b085c1ecac913ff" kindref="member">subscribe</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;<sp/>path,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_interval,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_interval,<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classtelegraph_1_1tmp__archive_1a9edb8a731ef989f40ae06e4b6c63c0be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/><ref refid="classtelegraph_1_1tmp__archive_1a9edb8a731ef989f40ae06e4b6c63c0be" kindref="member">call</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/><ref refid="classtelegraph_1_1action" kindref="compound">action</ref>*<sp/>a,<sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1value_1a68b0f771058facdf968ff62de354b881" kindref="member">value::invalid</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classtelegraph_1_1tmp__archive_1a1ccf8c90f14b36f3a09a501e0931e42e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/><ref refid="classtelegraph_1_1tmp__archive_1a1ccf8c90f14b36f3a09a501e0931e42e" kindref="member">call</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;<sp/>path,<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1value_1a68b0f771058facdf968ff62de354b881" kindref="member">value::invalid</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacetelegraph_1ab59c7b38d99a98b4acc22433c920b1e6" kindref="member">local_context_ptr</ref><sp/>create(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;,<sp/>io::io_context&amp;<sp/>ioc,<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/>type,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1params" kindref="compound">params</ref>&amp;<sp/>p);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="lib/telegraph/local/tmp_archive.hpp"/>
  </compounddef>
</doxygen>
