<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hocon_8hpp" kind="file" language="C++">
    <compoundname>hocon.hpp</compoundname>
    <includes refid="json_8hpp" local="yes">json.hpp</includes>
    <includedby refid="hocon_8cpp" local="yes">hocon.cpp</includedby>
    <includedby refid="generate_8cpp" local="no">generate.cpp</includedby>
    <includedby refid="tree-test_8cpp" local="no">tree-test.cpp</includedby>
    <incdepgraph>
      <node id="662">
        <label>hocon.hpp</label>
        <link refid="hocon_8hpp"/>
        <childnode refid="663" relation="include">
        </childnode>
      </node>
      <node id="663">
        <label>json.hpp</label>
        <link refid="json_8hpp"/>
        <childnode refid="664" relation="include">
        </childnode>
      </node>
      <node id="664">
        <label>nlohmann/json.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="665">
        <label>hocon.hpp</label>
        <link refid="hocon_8hpp"/>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
      </node>
      <node id="666">
        <label>hocon.cpp</label>
        <link refid="hocon_8cpp"/>
      </node>
      <node id="668">
        <label>tree-test.cpp</label>
        <link refid="tree-test_8cpp"/>
      </node>
      <node id="667">
        <label>generate.cpp</label>
        <link refid="generate_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtelegraph_1_1hocon__parser" prot="public">telegraph::hocon_parser</innerclass>
    <innernamespace refid="namespacetelegraph">telegraph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__TELEGRAPH_HOCON_PARSER_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__TELEGRAPH_HOCON_PARSER_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="json_8hpp" kindref="compound">json.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetelegraph" kindref="compound">telegraph</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">node;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classtelegraph_1_1hocon__parser" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtelegraph_1_1hocon__parser" kindref="compound">hocon_parser</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1ab87b47a6b955c365ddd74c343ecc16f4" kindref="member">json</ref><sp/><ref refid="classtelegraph_1_1hocon__parser_1aca7015dbc13a62d958ff28588416c461" kindref="member">parse_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="lib/telegraph/utils/hocon.hpp"/>
  </compounddef>
</doxygen>
