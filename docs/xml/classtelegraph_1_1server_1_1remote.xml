<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1server_1_1remote" kind="class" language="C++" prot="public">
    <compoundname>telegraph::server::remote</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; remote &gt;</basecompoundref>
    <basecompoundref refid="classtelegraph_1_1connection" prot="public" virt="non-virtual">telegraph::connection</basecompoundref>
    <includes refid="server_8hpp" local="no">server.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1server_1_1remote_1a5917ef5d920617c50dba9b615e37e88e" prot="private" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1forwarder" kindref="compound">forwarder</ref></type>
        <definition>forwarder telegraph::server::remote::local_fwd_</definition>
        <argsstring></argsstring>
        <name>local_fwd_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="32" column="1" bodyfile="lib/telegraph/remote/server.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1server_1_1remote_1adcdbf571639ba59316f6f71496e9cdf9" prot="private" static="no" mutable="no">
        <type>boost::beast::websocket::stream&lt; boost::beast::tcp_stream &gt;</type>
        <definition>boost::beast::websocket::stream&lt; boost::beast::tcp_stream&gt; telegraph::server::remote::ws_</definition>
        <argsstring></argsstring>
        <name>ws_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="34" column="1" bodyfile="lib/telegraph/remote/server.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1server_1_1remote_1a178f75467153aed321d5693e2672a121" prot="private" static="no" mutable="no">
        <type>std::deque&lt; api::Packet &gt;</type>
        <definition>std::deque&lt;api::Packet&gt; telegraph::server::remote::write_queue_</definition>
        <argsstring></argsstring>
        <name>write_queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="36" column="1" bodyfile="lib/telegraph/remote/server.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1server_1_1remote_1ab17fafa877a0577c9b3131ca3e9df456" prot="private" static="no" mutable="no">
        <type>io::streambuf</type>
        <definition>io::streambuf telegraph::server::remote::write_buf_</definition>
        <argsstring></argsstring>
        <name>write_buf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="37" column="1" bodyfile="lib/telegraph/remote/server.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1server_1_1remote_1a90eb5976be1536b518b89debfba36843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>telegraph::server::remote::remote</definition>
        <argsstring>(io::io_context &amp;ioc, boost::asio::ip::tcp::socket &amp;&amp;socket, const std::shared_ptr&lt; namespace_ &gt; &amp;local)</argsstring>
        <name>remote</name>
        <param>
          <type>io::io_context &amp;</type>
          <declname>ioc</declname>
        </param>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;&amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classtelegraph_1_1namespace__" kindref="compound">namespace_</ref> &gt; &amp;</type>
          <declname>local</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="39" column="1" bodyfile="lib/telegraph/remote/server.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1server_1_1remote_1aa6a2f2d4045ea8bb51938ca3da4e1b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void telegraph::server::remote::send</definition>
        <argsstring>(api::Packet &amp;&amp;p) override</argsstring>
        <name>send</name>
        <reimplements refid="classtelegraph_1_1connection_1ad5fd2c23680ecda6e07c2f02f3735809">send</reimplements>
        <param>
          <type>api::Packet &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="43" column="1" bodyfile="lib/telegraph/remote/server.cpp" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1server_1_1remote_1a10d60a8be9442784f3f1d63492835841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::server::remote::do_accept</definition>
        <argsstring>()</argsstring>
        <name>do_accept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="45" column="1" bodyfile="lib/telegraph/remote/server.cpp" bodystart="65" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtelegraph_1_1server_1_1remote_1ae1f5cf66b7315c1733e5d57d9b0daa84" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::server::remote::on_accept</definition>
        <argsstring>(boost::beast::error_code ec)</argsstring>
        <name>on_accept</name>
        <param>
          <type>boost::beast::error_code</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="47" column="1" bodyfile="lib/telegraph/remote/server.cpp" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1server_1_1remote_1a93596e9ef408f5e2afcdaf4ddf296bb0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::server::remote::start_reading</definition>
        <argsstring>()</argsstring>
        <name>start_reading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="49" column="1" bodyfile="lib/telegraph/remote/server.cpp" bodystart="91" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1server_1_1remote_1ac8b5c3c22eac2ba1af895956856dab2e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::server::remote::do_write_next</definition>
        <argsstring>()</argsstring>
        <name>do_write_next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/server.hpp" line="50" column="1" bodyfile="lib/telegraph/remote/server.cpp" bodystart="125" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="332">
        <label>std::enable_shared_from_this&lt; remote &gt;</label>
      </node>
      <node id="333">
        <label>telegraph::connection</label>
        <link refid="classtelegraph_1_1connection"/>
      </node>
      <node id="331">
        <label>telegraph::server::remote</label>
        <link refid="classtelegraph_1_1server_1_1remote"/>
        <childnode refid="332" relation="public-inheritance">
        </childnode>
        <childnode refid="333" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="335">
        <label>std::enable_shared_from_this&lt; remote &gt;</label>
      </node>
      <node id="336">
        <label>telegraph::connection</label>
        <link refid="classtelegraph_1_1connection"/>
      </node>
      <node id="334">
        <label>telegraph::server::remote</label>
        <link refid="classtelegraph_1_1server_1_1remote"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
        <childnode refid="336" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/telegraph/remote/server.hpp" line="30" column="1" bodyfile="lib/telegraph/remote/server.hpp" bodystart="28" bodyend="51"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1connection_1a8c977ff1083d9457444cee0cc4fc1add" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>close_stream</name></member>
      <member refid="classtelegraph_1_1connection_1a6952fb62edd1c7e78fe8744d4eac7aaa" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>connection</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1a10d60a8be9442784f3f1d63492835841" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>do_accept</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1ac8b5c3c22eac2ba1af895956856dab2e" prot="private" virt="non-virtual"><scope>telegraph::server::remote</scope><name>do_write_next</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1a5917ef5d920617c50dba9b615e37e88e" prot="private" virt="non-virtual"><scope>telegraph::server::remote</scope><name>local_fwd_</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1ae1f5cf66b7315c1733e5d57d9b0daa84" prot="private" virt="non-virtual"><scope>telegraph::server::remote</scope><name>on_accept</name></member>
      <member refid="classtelegraph_1_1connection_1a6dd7c859165db61ecdd14a8e5bcc7fcf" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>received</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1a90eb5976be1536b518b89debfba36843" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>remote</name></member>
      <member refid="classtelegraph_1_1connection_1a5edeb1d722fad636d63f125d896e41c4" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>request_response</name></member>
      <member refid="classtelegraph_1_1connection_1a769414199f9cf151ff115f223f07fb5c" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>request_stream</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1aa6a2f2d4045ea8bb51938ca3da4e1b5e" prot="public" virt="virtual"><scope>telegraph::server::remote</scope><name>send</name></member>
      <member refid="classtelegraph_1_1connection_1a07cd6d890aad0f708ca32d136e063937" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>set_handler</name></member>
      <member refid="classtelegraph_1_1connection_1ad3ec8072dd935d37eaac8cbc2390177d" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>set_stream_cb</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1a93596e9ef408f5e2afcdaf4ddf296bb0" prot="private" virt="non-virtual"><scope>telegraph::server::remote</scope><name>start_reading</name></member>
      <member refid="classtelegraph_1_1connection_1a5bf70bff51c2cd812f4f27b3e37e9060" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>write_back</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1ab17fafa877a0577c9b3131ca3e9df456" prot="private" virt="non-virtual"><scope>telegraph::server::remote</scope><name>write_buf_</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1a178f75467153aed321d5693e2672a121" prot="private" virt="non-virtual"><scope>telegraph::server::remote</scope><name>write_queue_</name></member>
      <member refid="classtelegraph_1_1server_1_1remote_1adcdbf571639ba59316f6f71496e9cdf9" prot="private" virt="non-virtual"><scope>telegraph::server::remote</scope><name>ws_</name></member>
      <member refid="classtelegraph_1_1connection_1a469b53662900132cfc89a595b1dab28c" prot="public" virt="non-virtual"><scope>telegraph::server::remote</scope><name>~connection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
