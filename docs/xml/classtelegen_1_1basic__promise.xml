<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegen_1_1basic__promise" kind="class" language="C++" prot="public">
    <compoundname>telegen::basic_promise</compoundname>
    <basecompoundref refid="structtelegen_1_1coroutine" prot="public" virt="non-virtual">telegen::coroutine</basecompoundref>
    <includes refid="promise_8hpp" local="no">promise.hpp</includes>
    <innerclass refid="structtelegen_1_1basic__promise_1_1chainer" prot="private">telegen::basic_promise::chainer</innerclass>
    <templateparamlist>
      <param>
        <type>size_t</type>
        <declname>Cap</declname>
        <defname>Cap</defname>
      </param>
      <param>
        <type>typename...</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classtelegen_1_1basic__promise_1a6e5a99f244274836b255b99ede08422d" prot="private" static="no">
        <type><ref refid="classstdext_1_1inplace__function" kindref="compound">stdext::inplace_function</ref>&lt; A(<ref refid="namespacetelegen_1a51e8b7480c7247182e2c6ca35e2c7504" kindref="member">promise_status</ref>, T &amp;&amp;...), sizeof(void *)&gt;</type>
        <definition>using telegen::basic_promise&lt; Cap, T &gt;::chain_func =  stdext::inplace_function&lt;A(promise_status, T&amp;&amp;...), sizeof(void*)&gt;</definition>
        <argsstring></argsstring>
        <name>chain_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="64" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtelegen_1_1basic__promise_1a41bba6927e718eed58a7e6e91db6f6d3" prot="public" static="no">
        <type>typename <ref refid="classtelegen_1_1basic__promise__completer" kindref="compound">basic_promise_completer</ref>&lt; Cap, T... &gt;::<ref refid="classtelegen_1_1basic__promise_1a41bba6927e718eed58a7e6e91db6f6d3" kindref="member">func</ref></type>
        <definition>using telegen::basic_promise&lt; Cap, T &gt;::func =  typename basic_promise_completer&lt;Cap, T...&gt;::func</definition>
        <argsstring></argsstring>
        <name>func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="83" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegen_1_1basic__promise_1a27303c4415f1e911cb80869a8e9ec65b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetelegen_1a51e8b7480c7247182e2c6ca35e2c7504" kindref="member">promise_status</ref></type>
        <definition>promise_status telegen::basic_promise&lt; Cap, T &gt;::status_</definition>
        <argsstring></argsstring>
        <name>status_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="180" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegen_1_1basic__promise_1a52179bce8ef91a9ff8fbbe9564ca2a5a" prot="private" static="no" mutable="no">
        <type>std::tuple&lt; T... &gt;</type>
        <definition>std::tuple&lt;T...&gt; telegen::basic_promise&lt; Cap, T &gt;::val_</definition>
        <argsstring></argsstring>
        <name>val_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="181" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegen_1_1basic__promise_1afdd7af0085bcdd703e8c89c3e4ecaeeb" prot="private" static="no" mutable="no">
        <type><ref refid="classtelegen_1_1basic__promise__completer" kindref="compound">basic_promise_completer</ref>&lt; Cap, T... &gt; *</type>
        <definition>basic_promise_completer&lt;Cap, T...&gt;* telegen::basic_promise&lt; Cap, T &gt;::obj_</definition>
        <argsstring></argsstring>
        <name>obj_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="182" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a2fc82b832b36b925b1c1fd42dd37cf40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegen::basic_promise&lt; Cap, T &gt;::basic_promise</definition>
        <argsstring>(promise_status s)</argsstring>
        <name>basic_promise</name>
        <param>
          <type><ref refid="namespacetelegen_1a51e8b7480c7247182e2c6ca35e2c7504" kindref="member">promise_status</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="85" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="85" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a836472488ebd1d41cf9070420903848c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegen::basic_promise&lt; Cap, T &gt;::basic_promise</definition>
        <argsstring>(T &amp;&amp;... val)</argsstring>
        <name>basic_promise</name>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="87" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a6ac5ae1e598293c22075b8bd9b87bc6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegen::basic_promise&lt; Cap, T &gt;::basic_promise</definition>
        <argsstring>(basic_promise_completer&lt; Cap, T... &gt; *obj)</argsstring>
        <name>basic_promise</name>
        <param>
          <type><ref refid="classtelegen_1_1basic__promise__completer" kindref="compound">basic_promise_completer</ref>&lt; Cap, T... &gt; *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="90" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="90" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a0c1f0ae0a200d107a8ab62afb48e6ffd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegen::basic_promise&lt; Cap, T &gt;::basic_promise</definition>
        <argsstring>(basic_promise&lt; Cap, T... &gt; &amp;&amp;p)</argsstring>
        <name>basic_promise</name>
        <param>
          <type><ref refid="classtelegen_1_1basic__promise" kindref="compound">basic_promise</ref>&lt; Cap, T... &gt; &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="101" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="101" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a6443a47f99ebe0c59bcff0d6312e491c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtelegen_1_1basic__promise" kindref="compound">basic_promise</ref>&lt; Cap, T... &gt; &amp;</type>
        <definition>basic_promise&lt;Cap, T...&gt;&amp; telegen::basic_promise&lt; Cap, T &gt;::operator=</definition>
        <argsstring>(basic_promise&lt; Cap, T... &gt; &amp;&amp;p)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classtelegen_1_1basic__promise" kindref="compound">basic_promise</ref>&lt; Cap, T... &gt; &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="112" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="112" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1afc06bee6b9672fce7cdbe0a29571223a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegen::basic_promise&lt; Cap, T &gt;::~basic_promise</definition>
        <argsstring>()</argsstring>
        <name>~basic_promise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="126" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1ad0b847d836f2cb8f15c4434b611c260f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>telegen::basic_promise&lt; Cap, T &gt;::basic_promise</definition>
        <argsstring>(const basic_promise&lt; Cap, T... &gt; &amp;p)=delete</argsstring>
        <name>basic_promise</name>
        <param>
          <type>const <ref refid="classtelegen_1_1basic__promise" kindref="compound">basic_promise</ref>&lt; Cap, T... &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1acc3ccb6c4a41c043d4a39ee4c41c7c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtelegen_1_1basic__promise" kindref="compound">basic_promise</ref>&lt; Cap, T... &gt; &amp;</type>
        <definition>basic_promise&lt;Cap, T...&gt;&amp; telegen::basic_promise&lt; Cap, T &gt;::operator=</definition>
        <argsstring>(const basic_promise&lt; Cap, T... &gt; &amp;p)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtelegen_1_1basic__promise" kindref="compound">basic_promise</ref>&lt; Cap, T... &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1ad792ccef6d5f06386d99f2899ee3fe0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespacetelegen_1a51e8b7480c7247182e2c6ca35e2c7504" kindref="member">promise_status</ref></type>
        <definition>constexpr promise_status telegen::basic_promise&lt; Cap, T &gt;::status</definition>
        <argsstring>() const</argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="134" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1af8d6af8cd8f1966c6602891df69bfd70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool telegen::basic_promise&lt; Cap, T &gt;::resolved</definition>
        <argsstring>() const</argsstring>
        <name>resolved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="135" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1ad31610fb65ecc1c9f9b967c56d47e872" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool telegen::basic_promise&lt; Cap, T &gt;::rejected</definition>
        <argsstring>() const</argsstring>
        <name>rejected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="136" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a8921f7ed33276b0a9c03b9e9df9fe234" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>I</declname>
            <defname>I</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr const std::tuple_element&lt; I, std::tuple&lt; T... &gt; &gt;::type &amp;</type>
        <definition>constexpr const std::tuple_element&lt;I,std::tuple&lt;T...&gt; &gt;::type&amp; telegen::basic_promise&lt; Cap, T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="140" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a384761b0c7536d6b9ab3dc0f63c7e259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void telegen::basic_promise&lt; Cap, T &gt;::resume</definition>
        <argsstring>() override</argsstring>
        <name>resume</name>
        <reimplements refid="structtelegen_1_1coroutine_1a2a7408a5b9474af3e59128934e3a5c00">resume</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="144" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a29839b535b83410d8bb03d7629570c02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegen::basic_promise&lt; Cap, T &gt;::then</definition>
        <argsstring>(const func &amp;cb)</argsstring>
        <name>then</name>
        <param>
          <type>const <ref refid="classtelegen_1_1basic__promise_1a41bba6927e718eed58a7e6e91db6f6d3" kindref="member">func</ref> &amp;</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="150" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="150" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1a520a6133513aaa9c7d099c038b5ea8b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtelegen_1_1basic__promise" kindref="compound">basic_promise</ref>&lt; 8, A &gt;</type>
        <definition>basic_promise&lt;8, A&gt; telegen::basic_promise&lt; Cap, T &gt;::chain</definition>
        <argsstring>(const chain_func&lt; A &gt; &amp;transform)</argsstring>
        <name>chain</name>
        <param>
          <type>const <ref refid="classstdext_1_1inplace__function" kindref="compound">chain_func</ref>&lt; A &gt; &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="160" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="160" bodyend="172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtelegen_1_1basic__promise_1ad79f2f985ed9b270dbcdfc4088d73fbc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegen::basic_promise&lt; Cap, T &gt;::receive</definition>
        <argsstring>(promise_status s, T &amp;&amp;... val)</argsstring>
        <name>receive</name>
        <param>
          <type><ref refid="namespacetelegen_1a51e8b7480c7247182e2c6ca35e2c7504" kindref="member">promise_status</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="gen/telegen/promise.hpp" line="174" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="174" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="41">
        <label>telegen::basic_promise&lt; Cap, T &gt;</label>
        <link refid="classtelegen_1_1basic__promise"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>telegen::coroutine</label>
        <link refid="structtelegen_1_1coroutine"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="43">
        <label>telegen::basic_promise&lt; Cap, T &gt;</label>
        <link refid="classtelegen_1_1basic__promise"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>telegen::coroutine</label>
        <link refid="structtelegen_1_1coroutine"/>
      </node>
    </collaborationgraph>
    <location file="gen/telegen/promise.hpp" line="62" column="1" bodyfile="gen/telegen/promise.hpp" bodystart="62" bodyend="183"/>
    <listofallmembers>
      <member refid="classtelegen_1_1basic__promise_1a2fc82b832b36b925b1c1fd42dd37cf40" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>basic_promise</name></member>
      <member refid="classtelegen_1_1basic__promise_1a836472488ebd1d41cf9070420903848c" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>basic_promise</name></member>
      <member refid="classtelegen_1_1basic__promise_1a6ac5ae1e598293c22075b8bd9b87bc6b" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>basic_promise</name></member>
      <member refid="classtelegen_1_1basic__promise_1a0c1f0ae0a200d107a8ab62afb48e6ffd" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>basic_promise</name></member>
      <member refid="classtelegen_1_1basic__promise_1ad0b847d836f2cb8f15c4434b611c260f" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>basic_promise</name></member>
      <member refid="classtelegen_1_1basic__promise_1a520a6133513aaa9c7d099c038b5ea8b7" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>chain</name></member>
      <member refid="classtelegen_1_1basic__promise_1a6e5a99f244274836b255b99ede08422d" prot="private" virt="non-virtual"><scope>telegen::basic_promise</scope><name>chain_func</name></member>
      <member refid="structtelegen_1_1coroutine_1ac13b85fb7d6b08c684c69f1109c2f947" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>coroutine</name></member>
      <member refid="structtelegen_1_1coroutine_1a335f75302785f4ee9d8073caf8cfc60b" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>finish</name></member>
      <member refid="classtelegen_1_1basic__promise_1a41bba6927e718eed58a7e6e91db6f6d3" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>func</name></member>
      <member refid="classtelegen_1_1basic__promise_1a8921f7ed33276b0a9c03b9e9df9fe234" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>get</name></member>
      <member refid="structtelegen_1_1coroutine_1a4e807c9f48ccfd7fd64a0b6ef2024da0" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>is_finished</name></member>
      <member refid="classtelegen_1_1basic__promise_1afdd7af0085bcdd703e8c89c3e4ecaeeb" prot="private" virt="non-virtual"><scope>telegen::basic_promise</scope><name>obj_</name></member>
      <member refid="classtelegen_1_1basic__promise_1a6443a47f99ebe0c59bcff0d6312e491c" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>operator=</name></member>
      <member refid="classtelegen_1_1basic__promise_1acc3ccb6c4a41c043d4a39ee4c41c7c01" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>operator=</name></member>
      <member refid="classtelegen_1_1basic__promise_1ad79f2f985ed9b270dbcdfc4088d73fbc" prot="private" virt="non-virtual"><scope>telegen::basic_promise</scope><name>receive</name></member>
      <member refid="classtelegen_1_1basic__promise_1ad31610fb65ecc1c9f9b967c56d47e872" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>rejected</name></member>
      <member refid="structtelegen_1_1coroutine_1a345d1cc0fd5bd8d126022958d4f17d3b" prot="public" virt="virtual"><scope>telegen::basic_promise</scope><name>reset</name></member>
      <member refid="classtelegen_1_1basic__promise_1af8d6af8cd8f1966c6602891df69bfd70" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>resolved</name></member>
      <member refid="classtelegen_1_1basic__promise_1a384761b0c7536d6b9ab3dc0f63c7e259" prot="public" virt="virtual"><scope>telegen::basic_promise</scope><name>resume</name></member>
      <member refid="structtelegen_1_1coroutine_1a48b19e2ca54c0a7b63fe5c5f19620bcb" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>run</name></member>
      <member refid="classtelegen_1_1basic__promise_1ad792ccef6d5f06386d99f2899ee3fe0e" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>status</name></member>
      <member refid="classtelegen_1_1basic__promise_1a27303c4415f1e911cb80869a8e9ec65b" prot="private" virt="non-virtual"><scope>telegen::basic_promise</scope><name>status_</name></member>
      <member refid="classtelegen_1_1basic__promise_1a29839b535b83410d8bb03d7629570c02" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>then</name></member>
      <member refid="classtelegen_1_1basic__promise_1a52179bce8ef91a9ff8fbbe9564ca2a5a" prot="private" virt="non-virtual"><scope>telegen::basic_promise</scope><name>val_</name></member>
      <member refid="classtelegen_1_1basic__promise_1afc06bee6b9672fce7cdbe0a29571223a" prot="public" virt="non-virtual"><scope>telegen::basic_promise</scope><name>~basic_promise</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
