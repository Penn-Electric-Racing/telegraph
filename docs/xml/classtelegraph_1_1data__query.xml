<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1data__query" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>telegraph::data_query</compoundname>
    <derivedcompoundref refid="classtelegraph_1_1tmp__data" prot="public" virt="non-virtual">telegraph::tmp_data</derivedcompoundref>
    <includes refid="data_8hpp" local="no">data.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1data__query_1a81705835f67a1e5a4ce2c1009847eddc" prot="public" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1signal" kindref="compound">signal</ref>&lt; const std::vector&lt; <ref refid="classtelegraph_1_1data__point" kindref="compound">data_point</ref> &gt; &amp; &gt;</type>
        <definition>signal&lt;const std::vector&lt;data_point&gt;&amp;&gt; telegraph::data_query::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="71" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1data__query_1a20545e27166e025df2f73c13907bf721" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="classtelegraph_1_1data__point" kindref="compound">data_point</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt;data_point&gt;&amp; telegraph::data_query::get_current</definition>
        <argsstring>() const =0</argsstring>
        <name>get_current</name>
        <reimplementedby refid="classtelegraph_1_1tmp__data_1a0cc69096544afeaffaae5f25587dc62f">get_current</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="70" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="108">
        <label>telegraph::tmp_data</label>
        <link refid="classtelegraph_1_1tmp__data"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="107">
        <label>telegraph::data_query</label>
        <link refid="classtelegraph_1_1data__query"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="109">
        <label>telegraph::data_query</label>
        <link refid="classtelegraph_1_1data__query"/>
        <childnode refid="110" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="110">
        <label>telegraph::signal&lt; const std::vector&lt; telegraph::data_point &gt; &amp;&gt;</label>
        <link refid="classtelegraph_1_1signal"/>
      </node>
    </collaborationgraph>
    <location file="lib/telegraph/common/data.hpp" line="68" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="68" bodyend="72"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1data__query_1a81705835f67a1e5a4ce2c1009847eddc" prot="public" virt="non-virtual"><scope>telegraph::data_query</scope><name>data</name></member>
      <member refid="classtelegraph_1_1data__query_1a20545e27166e025df2f73c13907bf721" prot="public" virt="pure-virtual"><scope>telegraph::data_query</scope><name>get_current</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
