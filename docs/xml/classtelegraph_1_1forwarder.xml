<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1forwarder" kind="class" language="C++" prot="public">
    <compoundname>telegraph::forwarder</compoundname>
    <includes refid="forwarder_8hpp" local="no">forwarder.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1forwarder_1a231b588db8c584984fab0df91d389aa0" prot="private" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1connection" kindref="compound">connection</ref> &amp;</type>
        <definition>connection&amp; telegraph::forwarder::conn_</definition>
        <argsstring></argsstring>
        <name>conn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="25" column="1" bodyfile="lib/telegraph/remote/forwarder.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1forwarder_1a6180b339a9f01c6687a0c05a7c664bd8" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classtelegraph_1_1namespace__" kindref="compound">namespace_</ref> &gt;</type>
        <definition>std::shared_ptr&lt;namespace_&gt; telegraph::forwarder::ns_</definition>
        <argsstring></argsstring>
        <name>ns_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="26" column="1" bodyfile="lib/telegraph/remote/forwarder.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1forwarder_1ae515d4e1629ba2ea1df366e8f5f47913" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int32_t, <ref refid="namespacetelegraph_1a58641aa5b1a2cbdb0431916a87069f64" kindref="member">subscription_ptr</ref> &gt;</type>
        <definition>std::unordered_map&lt;int32_t, subscription_ptr&gt; telegraph::forwarder::subs_</definition>
        <argsstring></argsstring>
        <name>subs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="28" column="1" bodyfile="lib/telegraph/remote/forwarder.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1forwarder_1a1b3de92801a96b2b08477937c71c4198" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int32_t, <ref refid="namespacetelegraph_1ad071241508ea0f86c7de0686016f9ca9" kindref="member">params_stream_ptr</ref> &gt;</type>
        <definition>std::unordered_map&lt;int32_t, params_stream_ptr&gt; telegraph::forwarder::streams_</definition>
        <argsstring></argsstring>
        <name>streams_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="30" column="1" bodyfile="lib/telegraph/remote/forwarder.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1forwarder_1adb32488e8c47b8fd1e5eb349fcdb0a46" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int32_t, <ref refid="namespacetelegraph_1a6ffe775ac48dca2a4013b53d692199c8" kindref="member">data_query_ptr</ref> &gt;</type>
        <definition>std::unordered_map&lt;int32_t, data_query_ptr&gt; telegraph::forwarder::queries_</definition>
        <argsstring></argsstring>
        <name>queries_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="31" column="1" bodyfile="lib/telegraph/remote/forwarder.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1abdd83232ce225a8d3f9ccd014ee5eeb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>telegraph::forwarder::forwarder</definition>
        <argsstring>(connection &amp;conn, const std::shared_ptr&lt; namespace_ &gt; &amp;ns)</argsstring>
        <name>forwarder</name>
        <param>
          <type><ref refid="classtelegraph_1_1connection" kindref="compound">connection</ref> &amp;</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classtelegraph_1_1namespace__" kindref="compound">namespace_</ref> &gt; &amp;</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="34" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="16" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1a61d26a7a1b8198e65824c720ab946052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>telegraph::forwarder::~forwarder</definition>
        <argsstring>()</argsstring>
        <name>~forwarder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="36" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="41" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1a0f4bad165885dd396389b209b51d2c5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::reply_error</definition>
        <argsstring>(const api::Packet &amp;p, const std::exception &amp;e)</argsstring>
        <name>reply_error</name>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const std::exception &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="38" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1a45a6689967be94d148512d30d77eebbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_query_ns</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_query_ns</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>yield</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="40" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="74" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1ab4812205676673f7f9b8b233ba22e45a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_request</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_request</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="42" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="309" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1adbc69d4c8ff877d818c0c5ca4e2b0dde" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_fetch_tree</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_fetch_tree</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>yield</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="44" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="117" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1aacd7f15e0600883eca9635dd5a959f62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_sub_change</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_sub_change</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="46" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="138" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1a00c101b5734fa9f4942a13ade8455f25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_call_action</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_call_action</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="47" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="216" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1ad3226906263ea77c190896fc70fb4618" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_data_write</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_data_write</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="49" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="241" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1af844b57ba82bc253a997d1c3ceec85aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_data_query</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_data_query</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="50" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="272" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1a813d109a5dfcda414ab8d145ffb9dcb0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_create</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_create</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>yield</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="52" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="363" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1forwarder_1af137abd11966948ba80bbedbf67530bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::forwarder::handle_destroy</definition>
        <argsstring>(io::yield_ctx &amp;, const api::Packet &amp;p)</argsstring>
        <name>handle_destroy</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <defname>yield</defname>
        </param>
        <param>
          <type>const api::Packet &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/remote/forwarder.hpp" line="53" column="1" bodyfile="lib/telegraph/remote/forwarder.cpp" bodystart="385" bodyend="396"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/telegraph/remote/forwarder.hpp" line="23" column="1" bodyfile="lib/telegraph/remote/forwarder.hpp" bodystart="23" bodyend="54"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1forwarder_1a231b588db8c584984fab0df91d389aa0" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>conn_</name></member>
      <member refid="classtelegraph_1_1forwarder_1abdd83232ce225a8d3f9ccd014ee5eeb2" prot="public" virt="non-virtual"><scope>telegraph::forwarder</scope><name>forwarder</name></member>
      <member refid="classtelegraph_1_1forwarder_1a00c101b5734fa9f4942a13ade8455f25" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_call_action</name></member>
      <member refid="classtelegraph_1_1forwarder_1a813d109a5dfcda414ab8d145ffb9dcb0" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_create</name></member>
      <member refid="classtelegraph_1_1forwarder_1af844b57ba82bc253a997d1c3ceec85aa" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_data_query</name></member>
      <member refid="classtelegraph_1_1forwarder_1ad3226906263ea77c190896fc70fb4618" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_data_write</name></member>
      <member refid="classtelegraph_1_1forwarder_1af137abd11966948ba80bbedbf67530bd" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_destroy</name></member>
      <member refid="classtelegraph_1_1forwarder_1adbc69d4c8ff877d818c0c5ca4e2b0dde" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_fetch_tree</name></member>
      <member refid="classtelegraph_1_1forwarder_1a45a6689967be94d148512d30d77eebbc" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_query_ns</name></member>
      <member refid="classtelegraph_1_1forwarder_1ab4812205676673f7f9b8b233ba22e45a" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_request</name></member>
      <member refid="classtelegraph_1_1forwarder_1aacd7f15e0600883eca9635dd5a959f62" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>handle_sub_change</name></member>
      <member refid="classtelegraph_1_1forwarder_1a6180b339a9f01c6687a0c05a7c664bd8" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>ns_</name></member>
      <member refid="classtelegraph_1_1forwarder_1adb32488e8c47b8fd1e5eb349fcdb0a46" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>queries_</name></member>
      <member refid="classtelegraph_1_1forwarder_1a0f4bad165885dd396389b209b51d2c5a" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>reply_error</name></member>
      <member refid="classtelegraph_1_1forwarder_1a1b3de92801a96b2b08477937c71c4198" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>streams_</name></member>
      <member refid="classtelegraph_1_1forwarder_1ae515d4e1629ba2ea1df366e8f5f47913" prot="private" virt="non-virtual"><scope>telegraph::forwarder</scope><name>subs_</name></member>
      <member refid="classtelegraph_1_1forwarder_1a61d26a7a1b8198e65824c720ab946052" prot="public" virt="non-virtual"><scope>telegraph::forwarder</scope><name>~forwarder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
