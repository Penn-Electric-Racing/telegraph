<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1tmp__data" kind="class" language="C++" prot="public">
    <compoundname>telegraph::tmp_data</compoundname>
    <basecompoundref refid="classtelegraph_1_1data__query" prot="public" virt="non-virtual">telegraph::data_query</basecompoundref>
    <includes refid="tmp__archive_8hpp" local="no">tmp_archive.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1tmp__data_1a14363865d08ad2ff92945121f09346af" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtelegraph_1_1data__point" kindref="compound">data_point</ref> &gt;</type>
        <definition>std::vector&lt;data_point&gt; telegraph::tmp_data::current_</definition>
        <argsstring></argsstring>
        <name>current_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/local/tmp_archive.hpp" line="13" column="1" bodyfile="lib/telegraph/local/tmp_archive.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1tmp__data_1a0cc69096544afeaffaae5f25587dc62f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; <ref refid="classtelegraph_1_1data__point" kindref="compound">data_point</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;data_point&gt;&amp; telegraph::tmp_data::get_current</definition>
        <argsstring>() const override</argsstring>
        <name>get_current</name>
        <reimplements refid="classtelegraph_1_1data__query_1a20545e27166e025df2f73c13907bf721">get_current</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/local/tmp_archive.hpp" line="15" column="1" bodyfile="lib/telegraph/local/tmp_archive.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1tmp__data_1a32f7e20afb889b3f9b179cfefed31f9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::tmp_data::write</definition>
        <argsstring>(const std::vector&lt; data_point &gt; &amp;d)</argsstring>
        <name>write</name>
        <param>
          <type>const std::vector&lt; <ref refid="classtelegraph_1_1data__point" kindref="compound">data_point</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/local/tmp_archive.hpp" line="16" column="1" bodyfile="lib/telegraph/local/tmp_archive.hpp" bodystart="16" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="404">
        <label>telegraph::tmp_data</label>
        <link refid="classtelegraph_1_1tmp__data"/>
        <childnode refid="405" relation="public-inheritance">
        </childnode>
      </node>
      <node id="405">
        <label>telegraph::data_query</label>
        <link refid="classtelegraph_1_1data__query"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="406">
        <label>telegraph::tmp_data</label>
        <link refid="classtelegraph_1_1tmp__data"/>
        <childnode refid="407" relation="public-inheritance">
        </childnode>
      </node>
      <node id="407">
        <label>telegraph::data_query</label>
        <link refid="classtelegraph_1_1data__query"/>
        <childnode refid="408" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="408">
        <label>telegraph::signal&lt; const std::vector&lt; telegraph::data_point &gt; &amp;&gt;</label>
        <link refid="classtelegraph_1_1signal"/>
      </node>
    </collaborationgraph>
    <location file="lib/telegraph/local/tmp_archive.hpp" line="11" column="1" bodyfile="lib/telegraph/local/tmp_archive.hpp" bodystart="11" bodyend="20"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1tmp__data_1a14363865d08ad2ff92945121f09346af" prot="private" virt="non-virtual"><scope>telegraph::tmp_data</scope><name>current_</name></member>
      <member refid="classtelegraph_1_1data__query_1a81705835f67a1e5a4ce2c1009847eddc" prot="public" virt="non-virtual"><scope>telegraph::tmp_data</scope><name>data</name></member>
      <member refid="classtelegraph_1_1tmp__data_1a0cc69096544afeaffaae5f25587dc62f" prot="public" virt="virtual"><scope>telegraph::tmp_data</scope><name>get_current</name></member>
      <member refid="classtelegraph_1_1tmp__data_1a32f7e20afb889b3f9b179cfefed31f9e" prot="public" virt="non-virtual"><scope>telegraph::tmp_data</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
