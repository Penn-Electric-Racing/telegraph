<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1profile" kind="class" language="C++" prot="public">
    <compoundname>telegraph::profile</compoundname>
    <includes refid="config_8hpp" local="no">config.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1profile_1a0e964f1462769bf0db2b55abd25ce7b6" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string telegraph::profile::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="38" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1profile_1a7c7ef1b9c7907e3521d969695323be35" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::unordered_set&lt; <ref refid="classtelegraph_1_1node" kindref="compound">node</ref> * &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::unordered_set&lt;node*&gt; &gt; telegraph::profile::sets_</definition>
        <argsstring></argsstring>
        <name>sets_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="39" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1profile_1a1c7b4b5e358b6210ad30410e65d921c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::profile::profile</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>profile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="16" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1profile_1adfe111d01fccdfad856ff27abf5c9959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::profile::profile</definition>
        <argsstring>(std::string &amp;&amp;name)</argsstring>
        <name>profile</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="17" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1profile_1a93aee808f8bcec2ed60d2ab62a4a8249" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const std::string &amp;</type>
        <definition>constexpr const std::string&amp; telegraph::profile::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="19" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1profile_1aca410ddfb17eb8905541d28f668c4b9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_set&lt; std::string &gt;</type>
        <definition>std::unordered_set&lt;std::string&gt; telegraph::profile::sets</definition>
        <argsstring>() const</argsstring>
        <name>sets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="21" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1profile_1ae55ca8f3458bc9a7b29b94320e11a075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_set&lt; <ref refid="classtelegraph_1_1node" kindref="compound">node</ref> * &gt; &amp;</type>
        <definition>std::unordered_set&lt;node*&gt;&amp; telegraph::profile::get</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="26" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1profile_1ae815f4b8ed9bbde85fbccc48b730fadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::unordered_set&lt; <ref refid="classtelegraph_1_1node" kindref="compound">node</ref> * &gt; &amp;</type>
        <definition>const std::unordered_set&lt;node*&gt;&amp; telegraph::profile::get</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="27" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1profile_1ad3b7efc2c78486ded407d9f7d77c63ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::profile::add</definition>
        <argsstring>(const std::string &amp;name, const std::unordered_set&lt; node *&gt; &amp;nodes)</argsstring>
        <name>add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::unordered_set&lt; <ref refid="classtelegraph_1_1node" kindref="compound">node</ref> *&gt; &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="29" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1profile_1a8855f4f0091aae625de7c5eae4f548bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::profile::add</definition>
        <argsstring>(const std::string &amp;name, std::unordered_set&lt; node *&gt; &amp;&amp;nodes)</argsstring>
        <name>add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::unordered_set&lt; <ref refid="classtelegraph_1_1node" kindref="compound">node</ref> *&gt; &amp;&amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/gen/config.hpp" line="34" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/telegraph/gen/config.hpp" line="14" column="1" bodyfile="lib/telegraph/gen/config.hpp" bodystart="14" bodyend="40"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1profile_1ad3b7efc2c78486ded407d9f7d77c63ad" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>add</name></member>
      <member refid="classtelegraph_1_1profile_1a8855f4f0091aae625de7c5eae4f548bf" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>add</name></member>
      <member refid="classtelegraph_1_1profile_1ae55ca8f3458bc9a7b29b94320e11a075" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>get</name></member>
      <member refid="classtelegraph_1_1profile_1ae815f4b8ed9bbde85fbccc48b730fadd" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>get</name></member>
      <member refid="classtelegraph_1_1profile_1a93aee808f8bcec2ed60d2ab62a4a8249" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>get_name</name></member>
      <member refid="classtelegraph_1_1profile_1a0e964f1462769bf0db2b55abd25ce7b6" prot="private" virt="non-virtual"><scope>telegraph::profile</scope><name>name_</name></member>
      <member refid="classtelegraph_1_1profile_1a1c7b4b5e358b6210ad30410e65d921c4" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>profile</name></member>
      <member refid="classtelegraph_1_1profile_1adfe111d01fccdfad856ff27abf5c9959" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>profile</name></member>
      <member refid="classtelegraph_1_1profile_1aca410ddfb17eb8905541d28f668c4b9d" prot="public" virt="non-virtual"><scope>telegraph::profile</scope><name>sets</name></member>
      <member refid="classtelegraph_1_1profile_1a7c7ef1b9c7907e3521d969695323be35" prot="private" virt="non-virtual"><scope>telegraph::profile</scope><name>sets_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
