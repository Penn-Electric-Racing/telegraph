<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1value__type" kind="class" language="C++" prot="public">
    <compoundname>telegraph::value_type</compoundname>
    <includes refid="type_8hpp" local="no">type.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" prot="public" static="no">
        <name>type_class</name>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6facc1cc882a8c85bf3a7987a1a4c50b514" prot="public">
          <name>Invalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa0f82b021ca18b56f4abab49c89f89581" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fab64feb81a951ff765b7f4b0c59f166d2" prot="public">
          <name>Enum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6faa377f01fbedf8f2a836f7e4981021152" prot="public">
          <name>Bool</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa4b710893b87196f36fbf648f5251e254" prot="public">
          <name>Uint8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fab29d35200c30b177146478c4d107b6d2" prot="public">
          <name>Uint16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fae1831c5eda2e34c43cacc2700795b273" prot="public">
          <name>Uint32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fade1493c48a66f0d966ba499cbc6e02ec" prot="public">
          <name>Uint64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa36a0435c0dac230b0b3e77d82bfbe40a" prot="public">
          <name>Int8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa32be90cd2578a1ecc5407a6a3d5e8b45" prot="public">
          <name>Int16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa97911bd7c00117307f3b4f89baee8469" prot="public">
          <name>Int32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fac678762a768d703603e032a20a0bcb2e" prot="public">
          <name>Int64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa0ade428faaf4b7bc8d441e7801e9f3e7" prot="public">
          <name>Float</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fac04c93c7547053995e928b1924a01b89" prot="public">
          <name>Double</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="13" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="13" bodyend="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1value__type_1a526fc1f76aca796872ff82d92446f256" prot="private" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">type_class</ref></type>
        <definition>type_class telegraph::value_type::class_</definition>
        <argsstring></argsstring>
        <name>class_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="136" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1value__type_1a4566740baacb3ca11c4b5c7d0c6e7ad8" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string telegraph::value_type::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="137" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1value__type_1adc21a9b1ad536e2076358836cb559959" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; telegraph::value_type::labels_</definition>
        <argsstring></argsstring>
        <name>labels_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="140" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a70977f8232886ae5580663fc26395211" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::value_type::value_type</definition>
        <argsstring>()</argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="20" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a1c509cad0f8ae29464da6f71137cbb68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::value_type::value_type</definition>
        <argsstring>(type_class c)</argsstring>
        <name>value_type</name>
        <param>
          <type><ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">type_class</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="21" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a66464cefb3475452910c7ae5be643b6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::value_type::value_type</definition>
        <argsstring>(const std::string_view &amp;name, const std::vector&lt; std::string &gt; &amp;labels)</argsstring>
        <name>value_type</name>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="22" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1ae80f832e65a0f7fb875bfe6ca5c2c7fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::value_type::value_type</definition>
        <argsstring>(const std::string_view &amp;name, std::vector&lt; std::string &gt; &amp;&amp;labels)</argsstring>
        <name>value_type</name>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="24" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1ab80f725bc93dca1e52a76f9a0fff45df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">type_class</ref></type>
        <definition>constexpr type_class telegraph::value_type::get_class</definition>
        <argsstring>() const</argsstring>
        <name>get_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="27" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1ad15335caeeff4d4a2e5499b28f126427" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const std::string &amp;</type>
        <definition>constexpr const std::string&amp; telegraph::value_type::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="28" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a481d2ba1e7ad3307a93481cb3e06b192" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const std::vector&lt; std::string &gt; &amp;</type>
        <definition>constexpr const std::vector&lt;std::string&gt;&amp; telegraph::value_type::get_labels</definition>
        <argsstring>() const</argsstring>
        <name>get_labels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="29" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1afcf8bd9842356bc6818b986fe3cf6025" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::value_type::add_label</definition>
        <argsstring>(const std::string_view &amp;label)</argsstring>
        <name>add_label</name>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="31" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1ac591946a9956e9429457ee198fb565c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::value_type::add_label</definition>
        <argsstring>(const std::string &amp;label)</argsstring>
        <name>add_label</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="32" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1ab8e6a14a043a02360d13124c5fd3fed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::value_type::set_class</definition>
        <argsstring>(type_class tc)</argsstring>
        <name>set_class</name>
        <param>
          <type><ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">type_class</ref></type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="34" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a0a83a299a45e7ef3c2439c85540a1731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::value_type::set_labels</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;&amp;labels)</argsstring>
        <name>set_labels</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;&amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="35" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a633f12a04ff6a15e46f6495aaa6dc0da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::value_type::set_name</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>set_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="36" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a59f254ed2dcb92ecb9ba85b4d3ef8e68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string telegraph::value_type::to_str</definition>
        <argsstring>() const</argsstring>
        <name>to_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="38" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="38" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a34d5c460357b088d0c11497d8f93088b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::value_type::pack</definition>
        <argsstring>(Type *tc) const</argsstring>
        <name>pack</name>
        <param>
          <type>Type *</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="111" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="111" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a9a30339ab46ea67c279414318ecf041d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool telegraph::value_type::operator==</definition>
        <argsstring>(const value_type &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classtelegraph_1_1value__type" kindref="compound">value_type</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="131" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a7d002f4e90bf6e8dc7e1527a9cb4d894" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr Type::Class</type>
        <definition>static constexpr Type::Class telegraph::value_type::pack</definition>
        <argsstring>(type_class tc)</argsstring>
        <name>pack</name>
        <param>
          <type><ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">type_class</ref></type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="73" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="73" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1abf022119eeb1ba37cfe259550830a04d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">type_class</ref></type>
        <definition>static constexpr type_class telegraph::value_type::unpack</definition>
        <argsstring>(Type::Class tc)</argsstring>
        <name>unpack</name>
        <param>
          <type>Type::Class</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="93" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="93" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value__type_1a3a4a3de4847ee82da57b5926b534df1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtelegraph_1_1value__type" kindref="compound">value_type</ref></type>
        <definition>static value_type telegraph::value_type::unpack</definition>
        <argsstring>(const Type &amp;tc)</argsstring>
        <name>unpack</name>
        <param>
          <type>const Type &amp;</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/type.hpp" line="119" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="119" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/telegraph/common/type.hpp" line="11" column="1" bodyfile="lib/telegraph/common/type.hpp" bodystart="11" bodyend="141"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1value__type_1afcf8bd9842356bc6818b986fe3cf6025" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>add_label</name></member>
      <member refid="classtelegraph_1_1value__type_1ac591946a9956e9429457ee198fb565c1" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>add_label</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6faa377f01fbedf8f2a836f7e4981021152" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Bool</name></member>
      <member refid="classtelegraph_1_1value__type_1a526fc1f76aca796872ff82d92446f256" prot="private" virt="non-virtual"><scope>telegraph::value_type</scope><name>class_</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fac04c93c7547053995e928b1924a01b89" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Double</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fab64feb81a951ff765b7f4b0c59f166d2" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Enum</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa0ade428faaf4b7bc8d441e7801e9f3e7" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Float</name></member>
      <member refid="classtelegraph_1_1value__type_1ab80f725bc93dca1e52a76f9a0fff45df" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>get_class</name></member>
      <member refid="classtelegraph_1_1value__type_1a481d2ba1e7ad3307a93481cb3e06b192" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>get_labels</name></member>
      <member refid="classtelegraph_1_1value__type_1ad15335caeeff4d4a2e5499b28f126427" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>get_name</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa32be90cd2578a1ecc5407a6a3d5e8b45" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Int16</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa97911bd7c00117307f3b4f89baee8469" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Int32</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fac678762a768d703603e032a20a0bcb2e" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Int64</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa36a0435c0dac230b0b3e77d82bfbe40a" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Int8</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6facc1cc882a8c85bf3a7987a1a4c50b514" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Invalid</name></member>
      <member refid="classtelegraph_1_1value__type_1adc21a9b1ad536e2076358836cb559959" prot="private" virt="non-virtual"><scope>telegraph::value_type</scope><name>labels_</name></member>
      <member refid="classtelegraph_1_1value__type_1a4566740baacb3ca11c4b5c7d0c6e7ad8" prot="private" virt="non-virtual"><scope>telegraph::value_type</scope><name>name_</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa0f82b021ca18b56f4abab49c89f89581" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>None</name></member>
      <member refid="classtelegraph_1_1value__type_1a9a30339ab46ea67c279414318ecf041d" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>operator==</name></member>
      <member refid="classtelegraph_1_1value__type_1a7d002f4e90bf6e8dc7e1527a9cb4d894" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>pack</name></member>
      <member refid="classtelegraph_1_1value__type_1a34d5c460357b088d0c11497d8f93088b" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>pack</name></member>
      <member refid="classtelegraph_1_1value__type_1ab8e6a14a043a02360d13124c5fd3fed2" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>set_class</name></member>
      <member refid="classtelegraph_1_1value__type_1a0a83a299a45e7ef3c2439c85540a1731" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>set_labels</name></member>
      <member refid="classtelegraph_1_1value__type_1a633f12a04ff6a15e46f6495aaa6dc0da" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>set_name</name></member>
      <member refid="classtelegraph_1_1value__type_1a59f254ed2dcb92ecb9ba85b4d3ef8e68" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>to_str</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>type_class</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fab29d35200c30b177146478c4d107b6d2" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Uint16</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fae1831c5eda2e34c43cacc2700795b273" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Uint32</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fade1493c48a66f0d966ba499cbc6e02ec" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Uint64</name></member>
      <member refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6fa4b710893b87196f36fbf648f5251e254" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>Uint8</name></member>
      <member refid="classtelegraph_1_1value__type_1abf022119eeb1ba37cfe259550830a04d" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>unpack</name></member>
      <member refid="classtelegraph_1_1value__type_1a3a4a3de4847ee82da57b5926b534df1f" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>unpack</name></member>
      <member refid="classtelegraph_1_1value__type_1a70977f8232886ae5580663fc26395211" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>value_type</name></member>
      <member refid="classtelegraph_1_1value__type_1a1c509cad0f8ae29464da6f71137cbb68" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>value_type</name></member>
      <member refid="classtelegraph_1_1value__type_1a66464cefb3475452910c7ae5be643b6b" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>value_type</name></member>
      <member refid="classtelegraph_1_1value__type_1ae80f832e65a0f7fb875bfe6ca5c2c7fc" prot="public" virt="non-virtual"><scope>telegraph::value_type</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
