<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1value" kind="class" language="C++" prot="public">
    <compoundname>telegraph::value</compoundname>
    <includes refid="lib_2telegraph_2common_2value_8hpp" local="no">value.hpp</includes>
    <innerclass refid="uniontelegraph_1_1value_1_1box" prot="public">telegraph::value::box</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1value_1a6735250190e7c4808b9cdaeaf36a9445" prot="private" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">value_type::type_class</ref></type>
        <definition>value_type::type_class telegraph::value::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="107" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1value_1a9fb79db84b453564fd39ee5524e867b8" prot="private" static="no" mutable="no">
        <type><ref refid="uniontelegraph_1_1value_1_1box" kindref="compound">box</ref></type>
        <definition>box telegraph::value::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="108" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1value_1a0d68e7b123903adee0527771007ef9bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="34" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1acdf151d4a74fc89dbf713b6a3bc010e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(bool b)</argsstring>
        <name>value</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="35" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1ad60a01207482efd28cdfbe9d38618d44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(uint8_t v)</argsstring>
        <name>value</name>
        <param>
          <type>uint8_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="36" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1a5d635c910bd217cbd8bf44a9ad92b8d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(uint16_t v)</argsstring>
        <name>value</name>
        <param>
          <type>uint16_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="37" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1ab893e01cc0191c29681122e70febf0eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(uint32_t v)</argsstring>
        <name>value</name>
        <param>
          <type>uint32_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="38" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1a74a4b302ca334adb99eac3e14e2cc9f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(uint64_t v)</argsstring>
        <name>value</name>
        <param>
          <type>uint64_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="39" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1abec206177d942003c27a025c5b430649" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(int8_t v)</argsstring>
        <name>value</name>
        <param>
          <type>int8_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="41" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1a79305dd1e9fcc13a7059b9605642ce2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(int16_t v)</argsstring>
        <name>value</name>
        <param>
          <type>int16_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="42" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1ac6e027b6a9687c477ae78c19aa35935a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(int32_t v)</argsstring>
        <name>value</name>
        <param>
          <type>int32_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="43" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1abfa29a624716fa98577f810fc96c0f87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(int64_t v)</argsstring>
        <name>value</name>
        <param>
          <type>int64_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="44" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1ac0ec66475ec076cf9f7a76e0a5b804d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(float v)</argsstring>
        <name>value</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="46" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1af0ad714556beb9cac21b887c4e67055f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(double v)</argsstring>
        <name>value</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="47" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1ad96b01fa30ad481c4695df1d06e9aa12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr telegraph::value::value</definition>
        <argsstring>(value_type::type_class t, uint8_t v)</argsstring>
        <name>value</name>
        <param>
          <type><ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">value_type::type_class</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="49" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1a3fad9e2214835f095af02feb1f91c49a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::value::value</definition>
        <argsstring>(const Value &amp;v)</argsstring>
        <name>value</name>
        <param>
          <type>const Value &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="51" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="51" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1ae38e5de94d5cfad919efe224da5a6c7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classtelegraph_1_1value__type_1a516081c0a4e231cb22554f48f052ff6f" kindref="member">value_type::type_class</ref></type>
        <definition>constexpr value_type::type_class telegraph::value::get_type_class</definition>
        <argsstring>() const</argsstring>
        <name>get_type_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="75" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1a79d73fbd3e172c33f11fdf7fead2b97a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="uniontelegraph_1_1value_1_1box" kindref="compound">box</ref> &amp;</type>
        <definition>constexpr const box&amp; telegraph::value::get_box</definition>
        <argsstring>() const</argsstring>
        <name>get_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="76" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1ad37d892925ba112c70d6c090c3623dd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool telegraph::value::is_valid</definition>
        <argsstring>()</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="78" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1a201fca0737b8be3128f2770b41087540" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T telegraph::value::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="81" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1abc2188de92998eb93f801780370c56da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::value::pack</definition>
        <argsstring>(Value *v)</argsstring>
        <name>pack</name>
        <param>
          <type>Value *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="85" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="85" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtelegraph_1_1value_1a68b0f771058facdf968ff62de354b881" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtelegraph_1_1value" kindref="compound">value</ref></type>
        <definition>static value telegraph::value::invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="72" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1a3ca25fc3c78659ae5f29da61b2583e2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtelegraph_1_1value" kindref="compound">value</ref></type>
        <definition>static value telegraph::value::none</definition>
        <argsstring>()</argsstring>
        <name>none</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="73" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1value_1abe64620f91527a2b36310c4ace2a2790" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtelegraph_1_1value" kindref="compound">value</ref></type>
        <definition>static value telegraph::value::unpack</definition>
        <argsstring>(const Value &amp;v)</argsstring>
        <name>unpack</name>
        <param>
          <type>const Value &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/value.hpp" line="103" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="103" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/telegraph/common/value.hpp" line="18" column="1" bodyfile="lib/telegraph/common/value.hpp" bodystart="18" bodyend="109"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1value_1a201fca0737b8be3128f2770b41087540" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>get</name></member>
      <member refid="classtelegraph_1_1value_1a79d73fbd3e172c33f11fdf7fead2b97a" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>get_box</name></member>
      <member refid="classtelegraph_1_1value_1ae38e5de94d5cfad919efe224da5a6c7d" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>get_type_class</name></member>
      <member refid="classtelegraph_1_1value_1a68b0f771058facdf968ff62de354b881" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>invalid</name></member>
      <member refid="classtelegraph_1_1value_1ad37d892925ba112c70d6c090c3623dd2" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>is_valid</name></member>
      <member refid="classtelegraph_1_1value_1a3ca25fc3c78659ae5f29da61b2583e2c" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>none</name></member>
      <member refid="classtelegraph_1_1value_1abc2188de92998eb93f801780370c56da" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>pack</name></member>
      <member refid="classtelegraph_1_1value_1a6735250190e7c4808b9cdaeaf36a9445" prot="private" virt="non-virtual"><scope>telegraph::value</scope><name>type_</name></member>
      <member refid="classtelegraph_1_1value_1abe64620f91527a2b36310c4ace2a2790" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>unpack</name></member>
      <member refid="classtelegraph_1_1value_1a0d68e7b123903adee0527771007ef9bb" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1acdf151d4a74fc89dbf713b6a3bc010e7" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1ad60a01207482efd28cdfbe9d38618d44" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1a5d635c910bd217cbd8bf44a9ad92b8d6" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1ab893e01cc0191c29681122e70febf0eb" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1a74a4b302ca334adb99eac3e14e2cc9f0" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1abec206177d942003c27a025c5b430649" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1a79305dd1e9fcc13a7059b9605642ce2b" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1ac6e027b6a9687c477ae78c19aa35935a" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1abfa29a624716fa98577f810fc96c0f87" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1ac0ec66475ec076cf9f7a76e0a5b804d4" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1af0ad714556beb9cac21b887c4e67055f" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1ad96b01fa30ad481c4695df1d06e9aa12" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1a3fad9e2214835f095af02feb1f91c49a" prot="public" virt="non-virtual"><scope>telegraph::value</scope><name>value</name></member>
      <member refid="classtelegraph_1_1value_1a9fb79db84b453564fd39ee5524e867b8" prot="private" virt="non-virtual"><scope>telegraph::value</scope><name>value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
