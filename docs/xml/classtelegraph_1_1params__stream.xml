<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1params__stream" kind="class" language="C++" prot="public">
    <compoundname>telegraph::params_stream</compoundname>
    <includes refid="params_8hpp" local="no">params.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1params__stream_1a0e2bbe89da6dd5258414755905b1ee0f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool telegraph::params_stream::closed_</definition>
        <argsstring></argsstring>
        <name>closed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="151" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1params__stream_1a0b6921e8d51f3327dd661ab87d2347d9" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(<ref refid="classtelegraph_1_1params" kindref="compound">params</ref> &amp;&amp;p)&gt;</type>
        <definition>std::function&lt;void(params&amp;&amp; p)&gt; telegraph::params_stream::handler_</definition>
        <argsstring></argsstring>
        <name>handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="152" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1params__stream_1afa61f350b975e895c9b655d864e1f555" prot="private" static="no" mutable="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>std::function&lt;void()&gt; telegraph::params_stream::on_close_</definition>
        <argsstring></argsstring>
        <name>on_close_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="153" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1params__stream_1a1314795940c576d60bbb217f82ea322f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classtelegraph_1_1params" kindref="compound">params</ref> &gt;</type>
        <definition>std::vector&lt;params&gt; telegraph::params_stream::queued_</definition>
        <argsstring></argsstring>
        <name>queued_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="154" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1params__stream_1a248d6dacec53ba9f8c20ec04aaa299d0" prot="public" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1signal" kindref="compound">signal</ref></type>
        <definition>signal telegraph::params_stream::destroyed</definition>
        <argsstring></argsstring>
        <name>destroyed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="156" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1params__stream_1af6dd3cea6f0a37463fd344f22bd93903" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::params_stream::params_stream</definition>
        <argsstring>()</argsstring>
        <name>params_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="157" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1params__stream_1ad41ab836f33b2735749d9eaa89cc6f78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::params_stream::~params_stream</definition>
        <argsstring>()</argsstring>
        <name>~params_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="160" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1params__stream_1a092b81bda513ee5bb082ebb8dd874bc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool telegraph::params_stream::is_closed</definition>
        <argsstring>() const</argsstring>
        <name>is_closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="165" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1params__stream_1a7d22fd7b36c978a1ed1df2ba4d9972cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::params_stream::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="167" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1params__stream_1a64e27e3048892b53eecf3826505945b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::params_stream::write</definition>
        <argsstring>(params &amp;&amp;p)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="classtelegraph_1_1params" kindref="compound">params</ref> &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="174" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1params__stream_1abc7d0b970cb2ed73d6d6a6be0a4ec85e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::params_stream::reset_pipe</definition>
        <argsstring>()</argsstring>
        <name>reset_pipe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="180" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1params__stream_1a4860e9fd373d843ae4eac706f9fb8aaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void telegraph::params_stream::set_pipe</definition>
        <argsstring>(const std::function&lt; void(params &amp;&amp;p)&gt; &amp;h, const std::function&lt; void()&gt; &amp;on_close)</argsstring>
        <name>set_pipe</name>
        <param>
          <type>const std::function&lt; void(<ref refid="classtelegraph_1_1params" kindref="compound">params</ref> &amp;&amp;p)&gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::function&lt; void()&gt; &amp;</type>
          <declname>on_close</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/params.hpp" line="185" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="185" bodyend="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="296">
        <label>telegraph::params_stream</label>
        <link refid="classtelegraph_1_1params__stream"/>
        <childnode refid="297" relation="usage">
          <edgelabel>destroyed</edgelabel>
        </childnode>
      </node>
      <node id="297">
        <label>telegraph::signal&lt; T &gt;</label>
        <link refid="classtelegraph_1_1signal"/>
      </node>
    </collaborationgraph>
    <location file="lib/telegraph/common/params.hpp" line="149" column="1" bodyfile="lib/telegraph/common/params.hpp" bodystart="149" bodyend="195"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1params__stream_1a7d22fd7b36c978a1ed1df2ba4d9972cb" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>close</name></member>
      <member refid="classtelegraph_1_1params__stream_1a0e2bbe89da6dd5258414755905b1ee0f" prot="private" virt="non-virtual"><scope>telegraph::params_stream</scope><name>closed_</name></member>
      <member refid="classtelegraph_1_1params__stream_1a248d6dacec53ba9f8c20ec04aaa299d0" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>destroyed</name></member>
      <member refid="classtelegraph_1_1params__stream_1a0b6921e8d51f3327dd661ab87d2347d9" prot="private" virt="non-virtual"><scope>telegraph::params_stream</scope><name>handler_</name></member>
      <member refid="classtelegraph_1_1params__stream_1a092b81bda513ee5bb082ebb8dd874bc1" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>is_closed</name></member>
      <member refid="classtelegraph_1_1params__stream_1afa61f350b975e895c9b655d864e1f555" prot="private" virt="non-virtual"><scope>telegraph::params_stream</scope><name>on_close_</name></member>
      <member refid="classtelegraph_1_1params__stream_1af6dd3cea6f0a37463fd344f22bd93903" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>params_stream</name></member>
      <member refid="classtelegraph_1_1params__stream_1a1314795940c576d60bbb217f82ea322f" prot="private" virt="non-virtual"><scope>telegraph::params_stream</scope><name>queued_</name></member>
      <member refid="classtelegraph_1_1params__stream_1abc7d0b970cb2ed73d6d6a6be0a4ec85e" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>reset_pipe</name></member>
      <member refid="classtelegraph_1_1params__stream_1a4860e9fd373d843ae4eac706f9fb8aaf" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>set_pipe</name></member>
      <member refid="classtelegraph_1_1params__stream_1a64e27e3048892b53eecf3826505945b5" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>write</name></member>
      <member refid="classtelegraph_1_1params__stream_1ad41ab836f33b2735749d9eaa89cc6f78" prot="public" virt="non-virtual"><scope>telegraph::params_stream</scope><name>~params_stream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
