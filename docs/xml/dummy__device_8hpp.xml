<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dummy__device_8hpp" kind="file" language="C++">
    <compoundname>dummy_device.hpp</compoundname>
    <includes refid="local_2namespace_8hpp" local="yes">namespace.hpp</includes>
    <includes refid="lib_2telegraph_2common_2publisher_8hpp" local="yes">../common/publisher.hpp</includes>
    <includes refid="lib_2telegraph_2common_2nodes_8hpp" local="yes">../common/nodes.hpp</includes>
    <includes local="no">string_view</includes>
    <includedby refid="dummy__device_8cpp" local="yes">dummy_device.cpp</includedby>
    <includedby refid="main_2server_8cpp" local="no">server.cpp</includedby>
    <incdepgraph>
      <node id="446">
        <label>boost/asio/deadline_timer.hpp</label>
      </node>
      <node id="441">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
      </node>
      <node id="427">
        <label>functional</label>
      </node>
      <node id="415">
        <label>context.hpp</label>
      </node>
      <node id="419">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="432">
        <label>value.hpp</label>
        <link refid="lib_2telegraph_2common_2value_8hpp"/>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>type.hpp</label>
        <link refid="type_8hpp"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
      </node>
      <node id="442">
        <label>variant</label>
      </node>
      <node id="420">
        <label>../utils/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="423">
        <label>../utils/io_fwd.hpp</label>
        <link refid="io__fwd_8hpp"/>
      </node>
      <node id="413">
        <label>dummy_device.hpp</label>
        <link refid="dummy__device_8hpp"/>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>../utils/signal.hpp</label>
        <link refid="signal_8hpp"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="433">
        <label>string</label>
      </node>
      <node id="434">
        <label>cinttypes</label>
      </node>
      <node id="429">
        <label>map</label>
      </node>
      <node id="445">
        <label>unordered_set</label>
      </node>
      <node id="448">
        <label>../common/nodes.hpp</label>
        <link refid="lib_2telegraph_2common_2nodes_8hpp"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
      </node>
      <node id="421">
        <label>exception</label>
      </node>
      <node id="447">
        <label>boost/asio/error.hpp</label>
      </node>
      <node id="435">
        <label>ostream</label>
      </node>
      <node id="416">
        <label>../utils/uuid.hpp</label>
        <link refid="uuid_8hpp"/>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="422">
        <label>string_view</label>
      </node>
      <node id="438">
        <label>common.pb.h</label>
      </node>
      <node id="444">
        <label>../common/publisher.hpp</label>
        <link refid="lib_2telegraph_2common_2publisher_8hpp"/>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
      </node>
      <node id="418">
        <label>boost/uuid/random_generator.hpp</label>
      </node>
      <node id="443">
        <label>optional</label>
      </node>
      <node id="437">
        <label>vector</label>
      </node>
      <node id="424">
        <label>../common/namespace.hpp</label>
        <link refid="common_2namespace_8hpp"/>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="425">
        <label>collection.hpp</label>
        <link refid="collection_8hpp"/>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>namespace.hpp</label>
        <link refid="local_2namespace_8hpp"/>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
      </node>
      <node id="431">
        <label>unordered_map</label>
      </node>
      <node id="428">
        <label>mutex</label>
      </node>
      <node id="440">
        <label>chrono</label>
      </node>
      <node id="417">
        <label>boost/uuid/uuid.hpp</label>
      </node>
      <node id="439">
        <label>data.hpp</label>
        <link refid="data_8hpp"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
      </node>
      <node id="430">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="449">
        <label>dummy_device.hpp</label>
        <link refid="dummy__device_8hpp"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>dummy_device.cpp</label>
        <link refid="dummy__device_8cpp"/>
      </node>
      <node id="451">
        <label>server.cpp</label>
        <link refid="main_2server_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtelegraph_1_1dummy__device" prot="public">telegraph::dummy_device</innerclass>
    <innernamespace refid="namespacetelegraph">telegraph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__TELEGRAPH_LOCAL_DUMMY_DEVICE_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__TELEGRAPH_LOCAL_DUMMY_DEVICE_HPP__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="local_2namespace_8hpp" kindref="compound">namespace.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common/publisher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common/nodes.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetelegraph" kindref="compound">telegraph</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="classtelegraph_1_1dummy__device" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtelegraph_1_1dummy__device" kindref="compound">dummy_device</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1local__context" kindref="compound">local_context</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classtelegraph_1_1dummy__device_1a608031386eb0abf2fc578211c1270f89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1a608031386eb0abf2fc578211c1270f89" kindref="member">handler</ref><sp/>=<sp/>std::function&lt;void(io::yield_ctx&amp;,<sp/>value)&gt;;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;const<sp/>variable*,<sp/>publisher_ptr&gt;<sp/>publishers_;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;const<sp/>action*,<sp/>handler&gt;<sp/>handlers_;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1dummy__device_1a70f00acd6141dea4c68f3b1f51c06cf0" kindref="member">dummy_device</ref>(io::io_context&amp;<sp/>ioc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/>name,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;node&gt;&amp;&amp;<sp/>s);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1dummy__device_1a7c2ea565d75451d04eaaba128be2550a" kindref="member">~dummy_device</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1a577a558745fcfddca641a80390ced80d" kindref="member">add_publisher</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetelegraph_1aff5109352406dd9a8cd38f431f808bc5" kindref="member">publisher_ptr</ref>&amp;<sp/>p);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1abf7bb4171f3bc0af89101f12a885d614" kindref="member">add_handler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1action" kindref="compound">action</ref>*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1a608031386eb0abf2fc578211c1270f89" kindref="member">handler</ref>&amp;<sp/>h);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1ad071241508ea0f86c7de0686016f9ca9" kindref="member">params_stream_ptr</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1a46d728506b36e9e8b5b6939eb6aefe12" kindref="member">request</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1params" kindref="compound">params</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a58641aa5b1a2cbdb0431916a87069f64" kindref="member">subscription_ptr</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1a06470ed069c481e8199dce9387448c8b" kindref="member">subscribe</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>ctx,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v,<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_interval,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_interval,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1af2e3be5731809d7693cb6a4607e5e3f6" kindref="member">call</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/><ref refid="classtelegraph_1_1action" kindref="compound">action</ref>*<sp/>a,<sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classtelegraph_1_1dummy__device_1a8996ac06dfc98de11c3d156b4a0a2caf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a58641aa5b1a2cbdb0431916a87069f64" kindref="member">subscription_ptr</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1a8996ac06dfc98de11c3d156b4a0a2caf" kindref="member">subscribe</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;<sp/>path,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_interval,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_interval,<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtelegraph_1_1local__context_1a16ab8680bd633b8b8554960bb8c48498" kindref="member">tree_</ref>-&gt;from_path(path));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!v)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1a06470ed069c481e8199dce9387448c8b" kindref="member">subscribe</ref>(yield,<sp/>v,<sp/>min_interval,<sp/>max_interval,<sp/>timeout);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classtelegraph_1_1dummy__device_1ab037df44b352953369760dd6071d84b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1ab037df44b352953369760dd6071d84b5" kindref="member">call</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;<sp/>path,<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1value" kindref="compound">value</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classtelegraph_1_1action" kindref="compound">action</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classtelegraph_1_1local__context_1a16ab8680bd633b8b8554960bb8c48498" kindref="member">tree_</ref>-&gt;from_path(path));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1value_1a68b0f771058facdf968ff62de354b881" kindref="member">value::invalid</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1af2e3be5731809d7693cb6a4607e5e3f6" kindref="member">call</ref>(yield,<sp/>a,<sp/>v,<sp/>timeout);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classtelegraph_1_1dummy__device_1a162f8f7a02c2907693ecf86662f6ffe1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1a162f8f7a02c2907693ecf86662f6ffe1" kindref="member">write_data</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v,<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;data_point&gt;&amp;<sp/>data)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56" refid="classtelegraph_1_1dummy__device_1a2d18fd0ec74a6d4bb76f789135403f19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1dummy__device_1a2d18fd0ec74a6d4bb76f789135403f19" kindref="member">write_data</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;,<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;data_point&gt;&amp;<sp/>data)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classtelegraph_1_1dummy__device_1a23b7704d488ca5e9ac732256621e8137" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a6ffe775ac48dca2a4013b53d692199c8" kindref="member">data_query_ptr</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1a23b7704d488ca5e9ac732256621e8137" kindref="member">query_data</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1variable" kindref="compound">variable</ref>*<sp/>v)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66" refid="classtelegraph_1_1dummy__device_1ae7820cd8f1d5683ccc90b7256e88a735" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetelegraph_1a6ffe775ac48dca2a4013b53d692199c8" kindref="member">data_query_ptr</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1ae7820cd8f1d5683ccc90b7256e88a735" kindref="member">query_data</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;<sp/>yield,<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string_view&gt;&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacetelegraph_1ab59c7b38d99a98b4acc22433c920b1e6" kindref="member">local_context_ptr</ref><sp/><ref refid="classtelegraph_1_1dummy__device_1a185602ee7a397af9cf23a5bb1bab50d3" kindref="member">create</ref>(<ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref>&amp;,<sp/>io::io_context&amp;<sp/>ioc,<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view&amp;<sp/>type,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtelegraph_1_1params" kindref="compound">params</ref>&amp;<sp/>p);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="lib/telegraph/local/dummy_device.hpp"/>
  </compounddef>
</doxygen>
