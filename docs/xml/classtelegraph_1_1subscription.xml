<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classtelegraph_1_1subscription" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>telegraph::subscription</compoundname>
    <includes refid="data_8hpp" local="no">data.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1subscription_1a193bc79b41f19075b015c7af7c1f7738" prot="public" static="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float telegraph::subscription::DISABLED</definition>
        <argsstring></argsstring>
        <name>DISABLED</name>
        <initializer>= std::numeric_limits&lt;float&gt;::infinity()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="16" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1subscription_1adaaff860567d8a1dd105cd1fcc91a840" prot="public" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1signal" kindref="compound">signal</ref>&lt; <ref refid="classtelegraph_1_1value" kindref="compound">value</ref> &gt;</type>
        <definition>signal&lt;value&gt; telegraph::subscription::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="45" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1subscription_1af871f21ea83b527626725c9fedc247f2" prot="public" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1signal" kindref="compound">signal</ref></type>
        <definition>signal telegraph::subscription::cancelled</definition>
        <argsstring></argsstring>
        <name>cancelled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="46" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtelegraph_1_1subscription_1a4a52c45f257a495f0ced91d5e9cc3723" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool telegraph::subscription::cancelled_</definition>
        <argsstring></argsstring>
        <name>cancelled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="48" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1subscription_1a1f168a6bb8f030ebc870e1a702192139" prot="protected" static="no" mutable="no">
        <type><ref refid="classtelegraph_1_1value__type" kindref="compound">value_type</ref></type>
        <definition>value_type telegraph::subscription::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="49" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1subscription_1a81abb8423637f2519d24a319f3f45cf0" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float telegraph::subscription::debounce_</definition>
        <argsstring></argsstring>
        <name>debounce_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="50" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtelegraph_1_1subscription_1aaae42162bcfb0f4e6e75f4a3e36de6d9" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float telegraph::subscription::refresh_</definition>
        <argsstring></argsstring>
        <name>refresh_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="51" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtelegraph_1_1subscription_1ae4c98364487057db2aa99675dac8afb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>telegraph::subscription::subscription</definition>
        <argsstring>(value_type t, float debounce, float refresh)</argsstring>
        <name>subscription</name>
        <param>
          <type><ref refid="classtelegraph_1_1value__type" kindref="compound">value_type</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>float</type>
          <declname>debounce</declname>
        </param>
        <param>
          <type>float</type>
          <declname>refresh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="18" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1a8a9cf662e9a068514d9595d9df0a48ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual telegraph::subscription::~subscription</definition>
        <argsstring>()</argsstring>
        <name>~subscription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On destruction <ref refid="classtelegraph_1_1subscription_1aa4917994240c530af2fd0e2a5bff435c" kindref="member">cancel()</ref> should be triggered </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="25" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1a9a574364550840ba96c594a4dab83b9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="classtelegraph_1_1value__type" kindref="compound">value_type</ref> &amp;</type>
        <definition>constexpr const value_type&amp; telegraph::subscription::get_type</definition>
        <argsstring>() const</argsstring>
        <name>get_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="27" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1a8ce2ae85cf733760222ed81db2791acf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float telegraph::subscription::get_debounce</definition>
        <argsstring>() const</argsstring>
        <name>get_debounce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="28" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1a92eb73e4f104fefbdfe886ec8122a2b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr float</type>
        <definition>constexpr float telegraph::subscription::get_refresh</definition>
        <argsstring>() const</argsstring>
        <name>get_refresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="29" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1a9dc4805fc25661d3901e8a4181e2e0f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool telegraph::subscription::is_cancelled</definition>
        <argsstring>() const</argsstring>
        <name>is_cancelled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether this subscription is getting data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="34" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1a55d47626d788e73317c5b8525d1369ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void telegraph::subscription::poll</definition>
        <argsstring>()=0</argsstring>
        <name>poll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1a18cf566e14d908c2403bb31a4114f3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void telegraph::subscription::change</definition>
        <argsstring>(io::yield_ctx &amp;, float debounce, float refresh, float timeout)=0</argsstring>
        <name>change</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
        </param>
        <param>
          <type>float</type>
          <declname>debounce</declname>
        </param>
        <param>
          <type>float</type>
          <declname>refresh</declname>
        </param>
        <param>
          <type>float</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1ae8efc1bddc19862bf79ea2659e3ae980" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void telegraph::subscription::cancel</definition>
        <argsstring>(io::yield_ctx &amp;yield, float timeout)=0</argsstring>
        <name>cancel</name>
        <param>
          <type><ref refid="structboost_1_1asio_1_1yield__ctx" kindref="compound">io::yield_ctx</ref> &amp;</type>
          <declname>yield</declname>
        </param>
        <param>
          <type>float</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtelegraph_1_1subscription_1aa4917994240c530af2fd0e2a5bff435c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void telegraph::subscription::cancel</definition>
        <argsstring>()=0</argsstring>
        <name>cancel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/telegraph/common/data.hpp" line="43" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="382">
        <label>telegraph::value_type</label>
        <link refid="classtelegraph_1_1value__type"/>
      </node>
      <node id="384">
        <label>telegraph::signal&lt; telegraph::value &gt;</label>
        <link refid="classtelegraph_1_1signal"/>
      </node>
      <node id="381">
        <label>telegraph::subscription</label>
        <link refid="classtelegraph_1_1subscription"/>
        <childnode refid="382" relation="usage">
          <edgelabel>type_</edgelabel>
        </childnode>
        <childnode refid="383" relation="usage">
          <edgelabel>cancelled</edgelabel>
        </childnode>
        <childnode refid="384" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="383">
        <label>telegraph::signal&lt; T &gt;</label>
        <link refid="classtelegraph_1_1signal"/>
      </node>
    </collaborationgraph>
    <location file="lib/telegraph/common/data.hpp" line="14" column="1" bodyfile="lib/telegraph/common/data.hpp" bodystart="14" bodyend="52"/>
    <listofallmembers>
      <member refid="classtelegraph_1_1subscription_1ae8efc1bddc19862bf79ea2659e3ae980" prot="public" virt="pure-virtual"><scope>telegraph::subscription</scope><name>cancel</name></member>
      <member refid="classtelegraph_1_1subscription_1aa4917994240c530af2fd0e2a5bff435c" prot="public" virt="pure-virtual"><scope>telegraph::subscription</scope><name>cancel</name></member>
      <member refid="classtelegraph_1_1subscription_1af871f21ea83b527626725c9fedc247f2" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>cancelled</name></member>
      <member refid="classtelegraph_1_1subscription_1a4a52c45f257a495f0ced91d5e9cc3723" prot="protected" virt="non-virtual"><scope>telegraph::subscription</scope><name>cancelled_</name></member>
      <member refid="classtelegraph_1_1subscription_1a18cf566e14d908c2403bb31a4114f3b9" prot="public" virt="pure-virtual"><scope>telegraph::subscription</scope><name>change</name></member>
      <member refid="classtelegraph_1_1subscription_1adaaff860567d8a1dd105cd1fcc91a840" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>data</name></member>
      <member refid="classtelegraph_1_1subscription_1a81abb8423637f2519d24a319f3f45cf0" prot="protected" virt="non-virtual"><scope>telegraph::subscription</scope><name>debounce_</name></member>
      <member refid="classtelegraph_1_1subscription_1a193bc79b41f19075b015c7af7c1f7738" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>DISABLED</name></member>
      <member refid="classtelegraph_1_1subscription_1a8ce2ae85cf733760222ed81db2791acf" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>get_debounce</name></member>
      <member refid="classtelegraph_1_1subscription_1a92eb73e4f104fefbdfe886ec8122a2b7" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>get_refresh</name></member>
      <member refid="classtelegraph_1_1subscription_1a9a574364550840ba96c594a4dab83b9e" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>get_type</name></member>
      <member refid="classtelegraph_1_1subscription_1a9dc4805fc25661d3901e8a4181e2e0f1" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>is_cancelled</name></member>
      <member refid="classtelegraph_1_1subscription_1a55d47626d788e73317c5b8525d1369ff" prot="public" virt="pure-virtual"><scope>telegraph::subscription</scope><name>poll</name></member>
      <member refid="classtelegraph_1_1subscription_1aaae42162bcfb0f4e6e75f4a3e36de6d9" prot="protected" virt="non-virtual"><scope>telegraph::subscription</scope><name>refresh_</name></member>
      <member refid="classtelegraph_1_1subscription_1ae4c98364487057db2aa99675dac8afb5" prot="public" virt="non-virtual"><scope>telegraph::subscription</scope><name>subscription</name></member>
      <member refid="classtelegraph_1_1subscription_1a1f168a6bb8f030ebc870e1a702192139" prot="protected" virt="non-virtual"><scope>telegraph::subscription</scope><name>type_</name></member>
      <member refid="classtelegraph_1_1subscription_1a8a9cf662e9a068514d9595d9df0a48ca" prot="public" virt="virtual"><scope>telegraph::subscription</scope><name>~subscription</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
